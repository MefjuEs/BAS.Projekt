{"version":3,"sources":["./src/app/components/movie-filter/movie-filter.component.ts","./src/app/components/movie-filter/movie-filter.component.html","./src/app/components/add-edit-personnel/add-edit-personnel.component.ts","./src/app/components/add-edit-personnel/add-edit-personnel.component.html","./src/app/components/admin-panel/admin-panel.component.html","./src/app/components/admin-panel/admin-panel.component.ts","./src/app/services/review.service.ts","./src/app/components/movie-review/movie-review.component.ts","./src/app/components/movie-review/movie-review.component.html","./src/app/services/personnel.service.ts","./src/app/components/admin-movie/admin-movie.component.ts","./src/app/components/admin-movie/admin-movie.component.html","./src/app/components/admin-movie/delete-movie-dialog.html","./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/services/notification.service.ts","./src/app/components/admin-genre/admin-genre.component.ts","./src/app/components/admin-genre/admin-genre.component.html","./src/app/components/admin-genre/delete-genre-dialog.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/genres.service.ts","./src/app/interfaces/FilmCrew.ts","./src/app/components/admin-review/admin-review.component.ts","./src/app/components/admin-review/admin-review.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/interfaces/SnackBarStyle.ts","./src/app/components/add-edit-movie/add-edit-movie.component.ts","./src/app/components/add-edit-movie/add-edit-movie.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/_helpers/jwt.interceptor.ts","./src/app/components/admin-personnel/admin-personnel.component.ts","./src/app/components/admin-personnel/admin-personnel.component.html","./src/app/components/admin-personnel/delete-personnel-dialog.html","./src/app/services/auth.service.ts","./src/app/_helpers/error.interceptor.ts","./src/app/components/add-edit-genre/add-edit-genre.component.ts","./src/app/components/add-edit-genre/add-edit-genre.component.html","./src/app/_helpers/auth.guard.ts","./src/app/components/movie/movie.component.ts","./src/app/components/movie/movie.component.html","./src/app/services/user.service.ts","./src/app/services/movies.service.ts","./src/app/interfaces/auth/role.ts","./src/app/components/admin-user/admin-user.component.html","./src/app/components/admin-user/admin-user.component.ts","./src/app/components/admin-user/delete-user-dialog.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { IGenreList } from 'src/app/interfaces/genres/IGenreList';\nimport { IMovieFilters } from 'src/app/interfaces/movies/IMovieFilters';\nimport { GenresService } from 'src/app/services/genres.service';\n\n@Component({\n  selector: 'movie-filter',\n  templateUrl: './movie-filter.component.html',\n  styleUrls: ['./movie-filter.component.css']\n})\nexport class MovieFilterComponent implements OnInit {\n  public movieFilters: IMovieFilters = {\n    title: '',\n    releaseYearFrom: null,\n    releaseYearTo: null,\n    movieLengthFrom: null,\n    movieLengthTo: null,\n    avgRatingFrom: null,\n    avgRatingTo: null,\n    page: 0,\n    pageSize: 10,\n    orderBy: '',\n    genreId: null\n  }\n  public genresList: IGenreList[];\n\n  @Output()\n  public applyEvent = new EventEmitter();\n\n  constructor(private genresService: GenresService) { }\n\n  ngOnInit(): void {\n    this.genresService.getGenres().subscribe(data => this.genresList = data);\n  }\n\n  returnFilters(event) {\n    this.movieFilters.page = 1;\n    this.applyEvent.emit(this.movieFilters);\n  }\n\n}\n","<div class=\"col-md-12 filters\">\n    <mat-expansion-panel hideToggle>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            Filtry\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        \n        <div class=\"row no-gutters\">\n            <mat-form-field class=\"col-md-4 input-padding-right-25\">\n                <mat-label>Tytuł filmu</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"movieFilters.title\" />\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Gatunek</mat-label>\n                <mat-select [(ngModel)]=\"movieFilters.genreId\">\n                    <mat-option value=\"\">Wszystkie</mat-option>\n                    <mat-option *ngFor=\"let genre of genresList\" value=\"{{genre.id}}\">{{genre.name}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <div class=\"w-100\"></div>\n\n            <mat-form-field class=\"col-md-2 input-padding-right-25\">\n                <mat-label>Premiera od</mat-label>\n                <input matInput type=\"number\" min=\"1950\" max=\"2100\" [(ngModel)]=\"movieFilters.releaseYearFrom\"/>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-2 input-padding-right-25\">\n                <mat-label>Premiera do</mat-label>\n                <input matInput type=\"number\" min=\"1950\" max=\"2100\" [(ngModel)]=\"movieFilters.releaseYearTo\"/>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-2 input-padding-right-25\">\n                <mat-label>Długość filmu od</mat-label>\n                <input matInput type=\"number\" min=\"0\" [(ngModel)]=\"movieFilters.movieLengthFrom\"/>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-2 input-padding-right-25\">\n                <mat-label>Długość filmu do</mat-label>\n                <input matInput type=\"number\" min=\"0\" [(ngModel)]=\"movieFilters.movieLengthTo\"/>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-2 input-padding-right-25\">\n                <mat-label>Średnia ocena od</mat-label>\n                <input matInput type=\"number\" min=\"0\" max=\"10\" [(ngModel)]=\"movieFilters.avgRatingFrom\"/>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-2 input-padding-right-25\">\n                <mat-label>Średnia ocena do</mat-label>\n                <input matInput type=\"number\" min=\"0\" max=\"10\" [(ngModel)]=\"movieFilters.avgRatingTo\"/>\n            </mat-form-field>\n\n            <div class=\"w-100\"></div>\n\n            <mat-form-field class=\"col-md-4 input-padding-right-25\">\n                <mat-label>Posortuj po</mat-label>\n                <mat-select [(ngModel)]=\"movieFilters.orderBy\">\n                    <mat-option value=\"titleAsc\">Tytuł (A-Z)</mat-option>\n                    <mat-option value=\"titleDesc\">Tytuł (Z-A)</mat-option>\n                    <mat-option value=\"releaseYearAsc\">Rok premiery (Rosnąco)</mat-option>\n                    <mat-option value=\"releaseYearDesc\">Rok premiery (Malejąco)</mat-option>\n                    <mat-option value=\"movieLengthAsc\">Długość filmu (Rosnąco)</mat-option>\n                    <mat-option value=\"movieLengthDesc\">Długość filmu (Malejąco)</mat-option>\n                    <mat-option value=\"averageRatingAsc\">Średnia ocena (Rosnąco)</mat-option>\n                    <mat-option value=\"averageRatingDesc\">Średnia ocena (Malejąco)</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <mat-action-row>\n            <button mat-raised-button color=\"accent\" (click)=\"returnFilters($event)\">Zatwierdź</button>\n        </mat-action-row>\n      </mat-expansion-panel>\n</div>","import { NotificationService } from './../../services/notification.service';\nimport { PersonnelService } from './../../services/personnel.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { IPersonnel } from 'src/app/interfaces/personnel/IPersonnel';\nimport { Location } from '@angular/common';\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\n\n@Component({\n  selector: 'app-add-edit-personnel',\n  templateUrl: './add-edit-personnel.component.html',\n  styleUrls: ['./add-edit-personnel.component.css']\n})\nexport class AddEditPersonnelComponent implements OnInit {\n  public notFound: boolean;\n  public isLoading: boolean;\n  public editMode: boolean;\n\n  personnelId: number;\n  personnelName = new FormControl('', [Validators.required, Validators.maxLength(100)]);\n  personnelSurname = new FormControl('', [Validators.required, Validators.maxLength(100)]);\n  personnelNationality = new FormControl('', [Validators.required, Validators.maxLength(100)]);\n  personnelDateOfBirth = new FormControl(null, [Validators.required]);\n\n  minDate: Date = new Date(1800, 1, 1);\n  maxDate: Date = new Date();\n\n  constructor(private personnelService: PersonnelService,\n              private notificationService: NotificationService,\n              private route: ActivatedRoute,\n              private location: Location) {\n    this.isLoading = true;\n    this.notFound = false;\n  }\n\n  ngOnInit() {\n    this.route.url.subscribe(urlSegments => {\n      this.editMode = urlSegments[2].path === 'edit';\n      \n      if(this.editMode === true) {\n        this.getPerson(this.route.snapshot.params.id)\n      }\n      else {\n        this.personnelId = 0;\n        this.personnelName.setValue('');\n        this.personnelSurname.setValue('');\n        this.personnelNationality.setValue('');\n        this.personnelDateOfBirth.setValue(null);\n        this.isLoading = false;\n      }\n    });\n  }\n\n  async getPerson(id) {\n    try {\n      let person = await this.personnelService.getPerson(id);\n\n      this.personnelId = person.id;\n      this.personnelName.setValue(person.name);\n      this.personnelSurname.setValue(person.surname);\n      this.personnelNationality.setValue(person.nationality);\n      this.personnelDateOfBirth.setValue(new Date(person.dateOfBirth));\n      this.isLoading = false;\n    }\n    catch(exception) {\n      this.isLoading = false;\n      this.notFound = true;\n    }\n  }\n\n  getNameErrorMessage() {\n    if (this.personnelName.hasError('required')) {\n      return 'Imię nie może być puste';\n    }\n    if(this.personnelName.hasError('maxLength')) {\n      return 'Imię jest za długie';\n    }\n\n    return '';\n  }\n\n  getSurnameErrorMessage() {\n    if (this.personnelSurname.hasError('required')) {\n      return 'Nazwisko nie może być puste';\n    }\n    if(this.personnelSurname.hasError('maxLength')) {\n      return 'Nazwisko jest za długie';\n    }\n\n    return '';\n  }\n\n  getNationalityErrorMessage() {\n    if (this.personnelNationality.hasError('required')) {\n      return 'Narodowość nie może być pusta';\n    }\n    if(this.personnelNationality.hasError('maxLength')) {\n      return 'Narodowość jest za długa';\n    }\n\n    return '';\n  }\n\n  onReturn() {\n    this.location.back();\n  }\n\n  onSubmit() {\n    if(this.personnelName.invalid ||\n      this.personnelSurname.invalid ||\n      this.personnelNationality.invalid || \n      this.personnelDateOfBirth.invalid) {\n        this.notificationService.showSnackBarNotification('Nie wszystkie pola są poprawne', 'Zamknij', SnackBarStyle.error);\n        return;\n    }\n    \n    let person = <IPersonnel> {\n      id: this.personnelId,\n      name: this.personnelName.value,\n      surname: this.personnelSurname.value,\n      nationality: this.personnelNationality.value,\n      dateOfBirth: this.personnelDateOfBirth.value\n    }\n\n    if(this.editMode) {\n      this.personnelService.editPersonnel(person).subscribe(data => {\n        this.notificationService.showSnackBarNotification('Pomyślnie wprowadzono zmiany', 'Zamknij', SnackBarStyle.success);\n        this.location.back();\n      });\n    } else {\n      this.personnelService.addPersonnel(person).subscribe(data => {\n        this.notificationService.showSnackBarNotification('Pomyślnie dodano osobę', 'Zamknij', SnackBarStyle.success);\n        this.location.back();\n      });\n    }\n    \n  }\n}\n","<div class=\"container\">\n    <ng-container *ngIf=\"!isLoading; else loadingBlock\">\n        <ng-container *ngIf=\"!notFound; else notFoundBlock\">\n            <div class=\"title\">\n                <h1> {{ editMode ? 'Edycja' : \"Dodawanie\"}} osoby</h1>\n            </div>\n            <div class=\"row\">\n                <mat-form-field hintLabel=\"Max 100 znaków\" appearance=\"fill\" class='mat-form-field-custom col-md-6'>\n                    <mat-label>Imie</mat-label>\n                    <input matInput #input maxlength=\"100\" type=\"text\" [formControl]=\"personnelName\"/>\n                    <mat-hint align=\"end\">{{personnelName.value?.length || 0}}/100</mat-hint>\n                    <mat-error *ngIf=\"personnelName.invalid\">{{ getNameErrorMessage() }}</mat-error>\n                </mat-form-field>\n                <mat-form-field hintLabel=\"Max 100 znaków\" appearance=\"fill\" class='mat-form-field-custom col-md-6'>\n                    <mat-label>Nazwisko</mat-label>\n                    <input matInput #input maxlength=\"100\" type=\"text\" [formControl]=\"personnelSurname\"/>\n                    <mat-hint align=\"end\">{{personnelSurname.value?.length || 0}}/100</mat-hint>\n                    <mat-error *ngIf=\"personnelSurname.invalid\">{{ getSurnameErrorMessage() }}</mat-error>\n                </mat-form-field>\n                <mat-form-field hintLabel=\"Max 100 znaków\" appearance=\"fill\" class='mat-form-field-custom col-md-6'>\n                    <mat-label>Narodowość</mat-label>\n                    <input matInput #input maxlength=\"100\" type=\"text\" [formControl]=\"personnelNationality\"/>\n                    <mat-hint align=\"end\">{{personnelNationality.value?.length || 0}}/100</mat-hint>\n                    <mat-error *ngIf=\"personnelNationality.invalid\">{{ getNationalityErrorMessage() }}</mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"mat-form-field-custom col-md-6\" appearance=\"fill\">\n                    <mat-label>Data urodzenia</mat-label>\n                    <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker\" [formControl]=\"personnelDateOfBirth\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error *ngIf=\"personnelDateOfBirth.hasError('required')\">\n                        Data urodzenia nie może być pusta\n                     </mat-error> \n                  </mat-form-field>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12 clearfix\">\n                <div class=\"float-right\">\n                    <button mat-raised-button color=\"accent\" (click)=\"onSubmit()\">Zatwierdź</button>\n                  </div>\n                  <div class=\"float-right mr-3\">\n                    <button mat-raised-button (click)=\"onReturn()\">Powrót</button>\n                  </div>\n              </div>\n            </div>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #notFoundBlock>\n    <div class=\"center-text\">\n        <h1>Nie znaleziono filmu</h1>\n    </div>\n</ng-template>\n<ng-template #loadingBlock>\n    <div class=\"mat-spinner\">\n        <mat-spinner color=\"accent\">\n        </mat-spinner>\n    </div>\n</ng-template>\n","<div class=\"container\">\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <div *ngIf=\"!tabError; else errorBlock\">\r\n      <mat-tab-group [selectedIndex]=\"currentTab\" (selectedTabChange)=\"changeUrl($event)\">\r\n        <mat-tab label=\"Filmy\">\r\n          <ng-template matTabContent>\r\n              <ng-container>\r\n                <admin-movie></admin-movie>\r\n              </ng-container>\r\n          </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"Gatunki\">\r\n            <ng-template matTabContent>\r\n              <ng-container>\r\n                <admin-genre></admin-genre>\r\n              </ng-container>\r\n            </ng-template>\r\n          </mat-tab>\r\n        <mat-tab label=\"Personel\">\r\n          <ng-template matTabContent>\r\n            <ng-container>\r\n              <admin-personnel></admin-personnel>\r\n            </ng-container>\r\n          </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"Użytkownicy\">\r\n            <ng-template matTabContent>\r\n              <ng-container>\r\n                <admin-user></admin-user>\r\n              </ng-container>\r\n            </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"Recenzje\">\r\n            <ng-template matTabContent>\r\n              <admin-review></admin-review>\r\n            </ng-template>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n<ng-template #errorBlock>\r\n  <div>\r\n    ZŁY ADRES\r\n  </div>\r\n</ng-template>","import { Location } from '@angular/common';\nimport { i18nMetaToJSDoc } from '@angular/compiler/src/render3/view/i18n/meta';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n  public isLoading: boolean;\n  public tabError: boolean;\n  public currentTab: number;\n\n  private tabNames: string[] = [ \"movie\", \"genre\", \"personnel\", \"user\", \"rating\"]\n\n  constructor(private route: ActivatedRoute, private location: Location) { \n    this.tabError = false;\n    this.isLoading = true;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let tab = params.get('tab');\n\n      if(tab == null) {\n        this.tabError = true;\n      }\n      else {\n        let index = this.tabNames.findIndex(t => t === tab);\n\n        if(index < 0) {\n          this.tabError = true;\n        }\n        else {\n          this.currentTab = index;\n        }\n      }\n      this.isLoading = false;\n    })\n  }\n\n  changeUrl(event) {\n    this.location.go(`/admin/${this.tabNames[event.index]}`)\n  }\n\n}\n","import { IUserReviewListWithFilters } from './../interfaces/reviews/IUserReviewListWithFilters';\r\nimport { IAllReviewFilters } from './../interfaces/reviews/IAllReviewFilters';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { IInsertUpdateReview } from '../interfaces/reviews/IInsertUpdateReview';\r\nimport { Observable } from 'rxjs';\r\nimport { IReviewFilters } from '../interfaces/reviews/IReviewFilters';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewService {\r\n  private url = `${environment.apiUrl}/api/Review`;\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  insertReview(review: IInsertUpdateReview): Observable<boolean> {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http.post<boolean>(this.url, review, {headers: headers});\r\n  }\r\n\r\n  didUserReviewMovie(movieId: number): Observable<boolean> {\r\n    return this.http.get<boolean>(`${this.url}/movie/${movieId}`)\r\n  }\r\n\r\n  getAllReviews(filters: IAllReviewFilters) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('movieId', filters.movieId == null ? '' : filters.movieId.toString());\r\n    params = params.append('userId', filters.userId == null ? '' : filters.userId.toString());\r\n    params = params.append('page', filters.page.toString());\r\n    params = params.append('pageSize', filters.pageSize == null ? '' : filters.pageSize.toString());\r\n    params = params.append('orderBy', filters.orderBy);\r\n\r\n\r\n    return this.http.get<IUserReviewListWithFilters>(`${this.url}/all`, { headers: headers, params: params });\r\n  }\r\n\r\n  async getMovieReviews(filters: IReviewFilters) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('id', filters.id == null ? '' : filters.id.toString());\r\n    params = params.append('page', filters.page.toString());\r\n    params = params.append('pageSize', filters.pageSize == null ? '' : filters.pageSize.toString());\r\n    params = params.append('orderBy', filters.orderBy);\r\n\r\n\r\n    return this.http.get<IUserReviewListWithFilters>(`${this.url}/movie`, { headers: headers, params: params }).toPromise();\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { IInsertUpdateReview } from 'src/app/interfaces/reviews/IInsertUpdateReview';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ReviewService } from 'src/app/services/review.service';\r\n\r\n@Component({\r\n  selector: 'movie-review',\r\n  templateUrl: './movie-review.component.html',\r\n  styleUrls: ['./movie-review.component.css']\r\n})\r\nexport class MovieReviewComponent implements OnInit {\r\n\r\n  @Output()\r\n  reviewFormClose: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  movieId: number;\r\n  review: IInsertUpdateReview;\r\n\r\n  reviewBody: FormControl;\r\n  reviewScore: string;\r\n  rating: number;\r\n\r\n  constructor(private reviewService: ReviewService, private authService: AuthService) {\r\n    this.reviewFormClose = new EventEmitter();\r\n    this.reviewBody = new FormControl('', [Validators.maxLength(2000)]);\r\n    this.reviewScore = '0';\r\n    this.rating = 0;\r\n\r\n    this.review = {\r\n      userId: 0,\r\n      movieId: 0,\r\n      message: '',\r\n      rating: 0\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onHoverRatingChange(event) {\r\n    if(event.hoverRating == 0) {\r\n      this.reviewScore = this.rating.toString();\r\n    } else {\r\n      this.reviewScore = event.hoverRating;\r\n    }\r\n  }\r\n\r\n  onRatingChange(event) {\r\n    this.reviewScore = event.rating;\r\n    this.rating = event.rating;\r\n  }\r\n\r\n  onReviewSubmit(event) {\r\n    this.review.userId = this.authService.currentUserValue.id;\r\n    this.review.movieId = this.movieId;\r\n    this.review.message = this.reviewBody.value;\r\n    this.review.rating = this.rating;\r\n\r\n    this.reviewService.insertReview(this.review).subscribe(result => {\r\n      console.log(result);\r\n      if(result != false) {\r\n        this.reviewFormClose.emit(result);\r\n      } else {\r\n        this.reviewFormClose.emit(result);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancelReview(event) {\r\n    this.reviewFormClose.emit(false);\r\n  }\r\n}\r\n","<div>\r\n    <mat-card>\r\n        <mat-card-title class=\"review-card-title\">\r\n            Napisz recenzję\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n            <div class=\"row\">\r\n                <star-rating class=\"review-card-star-rating\"\r\n                [labelText]=\"reviewScore\"\r\n                labelPosition=\"top\"\r\n                starType=\"icon\"\r\n                staticColor=\"ok\"\r\n                size=\"large\"\r\n                speed=\"immediately\"\r\n                numOfStars=\"10\"\r\n                hoverEnabled=\"true\"\r\n                [rating]=\"rating\"\r\n                (hoverRatingChange)=\"onHoverRatingChange($event)\"\r\n                (starClickChange)=\"onRatingChange($event)\">\r\n                </star-rating>\r\n            </div>\r\n            <div class=\"row\">\r\n                <mat-form-field hintLabel=\"Max 2000 znaków\" appearance=\"fill\" class=\"mat-form-field-custom\">\r\n                    <mat-label>Treść recenzji</mat-label>\r\n                    <textarea matInput #input maxlength=\"2000\" type=\"text\" [formControl]=\"reviewBody\"></textarea>\r\n                    <mat-hint align=\"end\">{{reviewBody.value?.length || 0}}/2000</mat-hint>\r\n                    <mat-error *ngIf=\"reviewBody.invalid\"></mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </mat-card-content>\r\n        <mat-card-actions align=\"end\">\r\n            <button mat-raised-button color=\"accent\" (click)=\"onReviewSubmit($event)\">Opublikuj</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onCancelReview($event)\">Anuluj</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>","import { IPersonnelFilters } from './../interfaces/personnel/IPersonnelFilters';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { IGenreList } from '../interfaces/genres/IGenreList';\nimport { IPersonnelInSelectDTO } from '../interfaces/personnel/IPersonnelInSelectDTO';\nimport { IPersonnelListWithFilters } from '../interfaces/personnel/IPersonnelListWithFilters';\nimport { IPersonnel } from '../interfaces/personnel/IPersonnel';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class PersonnelService {\n  private url = `${environment.apiUrl}/api/Personnel`;\n\n  constructor(private http: HttpClient) { }\n\n  async getPersonnelToSelectList(numberOfItems: number, fullName: string, skipPersonnelList: number[]) {\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    \n    let params = new HttpParams();\n    params = params.append('numberOfItems', numberOfItems.toString());\n    params = params.append('fullName', fullName);\n\n    skipPersonnelList.forEach((id, index) => {\n      params = params.append(`skipPersonnelList[${index}]`, id.toString());\n    })\n\n    return await this.http.get<IPersonnelInSelectDTO[]>(`${this.url}/select`, {headers: headers, params: params}).toPromise();\n  }\n\n  async getPersonnel(filters: IPersonnelFilters) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    let params = new HttpParams();\n    params = params.append('fullName', filters.fullName);\n    params = params.append('nationality', filters.nationality);\n    params = params.append('birthDateFrom', filters.birthDateFrom ? filters.birthDateFrom.toDateString() : '');\n    params = params.append('birthDateTo', filters.birthDateTo ? filters.birthDateTo.toDateString() : '');\n    params = params.append('page', filters.page.toString());\n    params = params.append('pageSize', filters.pageSize ? filters.pageSize.toString() : '');\n    params = params.append('orderBy', filters.orderBy);\n\n    return await this.http.get<IPersonnelListWithFilters>(this.url, { headers: headers, params: params }).toPromise();\n  }\n\n  editPersonnel(person: IPersonnel): Observable<any> {\n    let headers = new HttpHeaders().append('Content-Disposition', 'multipart/form-data');\n    console.log(person.dateOfBirth)\n    let formData: FormData = new FormData();\n    formData.append('id', person.id.toString());\n    formData.append('name', person.name);\n    formData.append('surname', person.surname);\n    formData.append('nationality', person.nationality);\n    formData.append('dateOfBirth', person.dateOfBirth.toDateString());\n\n    return this.http.put(this.url, formData, {headers: headers});\n  }\n\n  addPersonnel(person: IPersonnel): Observable<any> {\n    let headers = new HttpHeaders().append('Content-Disposition', 'multipart/form-data');\n\n    let formData: FormData = new FormData();\n    formData.append('id', person.id.toString());\n    formData.append('name', person.name);\n    formData.append('surname', person.surname);\n    formData.append('nationality', person.nationality);\n    formData.append('dateOfBirth', person.dateOfBirth.toDateString());\n\n    return this.http.post(this.url, formData, {headers: headers});\n  }\n\n  deletePersonnel(id: number) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n\n  async getPerson(id: number) {\n    return await this.http.get<IPersonnel>(`${this.url}/${id}`).toPromise();\n  }\n}\n","import { NotificationService } from './../../services/notification.service';\r\nimport { IFile } from './../../interfaces/movies/IFile';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IMovieFilters } from 'src/app/interfaces/movies/IMovieFilters';\r\nimport { IMovieInList } from 'src/app/interfaces/movies/IMovieInList';\r\nimport { IMovieListWithFilters } from 'src/app/interfaces/movies/IMovieListWithFilters';\r\nimport { MoviesService } from 'src/app/services/movies.service';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\r\n\r\n@Component({\r\n  selector: 'admin-movie',\r\n  templateUrl: './admin-movie.component.html',\r\n  styleUrls: ['./admin-movie.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class AdminMovieComponent implements OnInit {\r\n  public isLoading: boolean = true;\r\n  public movieFilters: IMovieFilters = {\r\n    title: '',\r\n    releaseYearFrom: null,\r\n    releaseYearTo: null,\r\n    movieLengthFrom: null,\r\n    movieLengthTo: null,\r\n    avgRatingFrom: null,\r\n    avgRatingTo: null,\r\n    page: 1,\r\n    pageSize: 10,\r\n    orderBy: '',\r\n    genreId: null\r\n  }\r\n  public movies: IMovieListWithFilters = {\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    allPages: 1,\r\n    allElements: 0,\r\n    movieList: []\r\n  };\r\n  public displayedColumns: string[] = ['title', 'releaseYear', 'movieLengthInMinutes', 'averageRating', 'action'];\r\n  public pageIndex: number;\r\n  public expandedElement: IMovieInList | null;\r\n  \r\n  constructor(private moviesService: MoviesService,\r\n      private notificationService: NotificationService,\r\n      public dialog: MatDialog) {\r\n    this.isLoading = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pageIndex = 0;\r\n    this.movieFilters.pageSize = 10;\r\n    this.getMovies();\r\n  }\r\n\r\n  getMovies() {\r\n    this.moviesService.getMovies(this.movieFilters).subscribe(data => {\r\n      this.isLoading = true;\r\n      this.movies = data;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onApplyFilters(event) {\r\n    let pageSize = this.movieFilters.pageSize;\r\n    this.movieFilters = event;\r\n    this.movieFilters.pageSize = pageSize;\r\n    this.movieFilters.page = 1;\r\n    this.pageIndex = 0;\r\n    this.getMovies();\r\n  }\r\n\r\n  changePage(event) {\r\n    if (event.pageSize != this.movieFilters.pageSize) {\r\n      this.movieFilters.pageSize = event.pageSize;\r\n    }\r\n    this.pageIndex = event.pageIndex;\r\n\r\n    this.movieFilters.page = this.pageIndex + 1;\r\n    this.getMovies();\r\n  }\r\n\r\n  openDeleteDialog(id) {\r\n    const dialogRef = this.dialog.open(DeleteMovieDialog);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result === true) {\r\n        this.notificationService.showSnackBarNotification('Pomyślnie usunięto film', 'Zamknij', SnackBarStyle.success);\r\n        this.moviesService.deleteMovie(id).subscribe(() => {\r\n          this.getMovies();\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  async expandMovieDetails(element) {\r\n\r\n    if(this.expandedElement === element) {\r\n      this.expandedElement = null;\r\n    }\r\n    else {\r\n        this.expandedElement = element;\r\n    }\r\n  }\r\n\r\n  getMoviePoster(poster: IFile) {\r\n    if(poster != null) {\r\n      return `data:${poster.contentType};base64,${poster.file}`;\r\n    }\r\n    else {\r\n      return `/assets/images/noMovieImage.png`;\r\n    }\r\n  }\r\n\r\n  getMovieGenres(genres) {\r\n    return genres.join(', ')\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-movie-dialog',\r\n  templateUrl: './delete-movie-dialog.html',\r\n})\r\nexport class DeleteMovieDialog {}\r\n","<div>\r\n    <movie-filter (applyEvent)=\"onApplyFilters($event)\"></movie-filter>\r\n</div>\r\n<div class=\"col-md-12 pb-3\">\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <table mat-table [dataSource]=\"movies.movieList\" class=\"mat-elevation-z8\" multiTemplateDataRows>\r\n              <ng-container matColumnDef=\"title\">\r\n                <th mat-header-cell *matHeaderCellDef>Tytuł</th>\r\n                <td mat-cell *matCellDef=\"let movie\"> {{movie.title}} </td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"releaseYear\">\r\n                <th mat-header-cell *matHeaderCellDef>Rok premiery</th>\r\n                <td mat-cell *matCellDef=\"let movie\"> {{movie.releaseYear}} </td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"movieLengthInMinutes\">\r\n                <th mat-header-cell *matHeaderCellDef> Czas trwania </th>\r\n                <td mat-cell *matCellDef=\"let movie\"> {{movie.movieLengthInMinutes}} </td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"averageRating\">\r\n                <th mat-header-cell *matHeaderCellDef> Śr. ocena </th>\r\n                <td mat-cell *matCellDef=\"let movie\"> {{movie.averageRating}} </td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef >\r\n                  <div class=\"clearfix\">\r\n                    <button mat-mini-fab routerLink=\"/admin/movie/add\" class=\"green-background float-right\" >\r\n                      <mat-icon>add</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let movie\" class=\"clearfix\">\r\n                  <div class=\"float-right\">\r\n                    <button mat-mini-fab color=\"warn\" class=\"custom-button-icon\" (click)=\"$event.stopPropagation(); openDeleteDialog(movie.id)\">\r\n                      <mat-icon class=\"custom-icon\">delete</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"float-right mr-2\">\r\n                    <button mat-mini-fab routerLink=\"/admin/movie/edit/{{movie.id}}\" (click)=\"$event.stopPropagation()\" class=\"custom-button-icon\" color=\"primary\">\r\n                      <mat-icon class=\"custom-icon\">edit</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"expandedDetail\">\r\n                <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\r\n                  <div class=\"example-element-detail\"\r\n                      [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                    <div>\r\n                      <div class=\"clearfix\">\r\n                        <div class=\"image-div float-left\">\r\n                          <img [src]=\"getMoviePoster(element.poster)\" class=\"movie-image\" alt=\"Responsive image\">\r\n                        </div>\r\n                        <div class=\" float-left\">\r\n                          <div class=\"movie-detail\">\r\n                            <mat-chip-list class=\"mat-chip-list\">\r\n                              <mat-chip *ngFor=\"let genre of element.genres\" class=\"mat-chip\" color=\"primary\" selected>\r\n                                  {{genre}}\r\n                              </mat-chip>\r\n                            </mat-chip-list>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </ng-container>   \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\" [class.example-expanded-row]=\"expandedElement === element\" (click)=\"expandMovieDetails(element)\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>   \r\n      </table>\r\n    </ng-container>\r\n</div>\r\n<div>\r\n    <mat-paginator [length]=\"movies.allElements\" [pageSize]=\"movieFilters.pageSize\" [pageIndex]=\"pageIndex\" [pageSizeOptions]=\"[5,10,20,50]\" showFirstLastButtons (page)=\"changePage($event)\"></mat-paginator>\r\n</div>\r\n","<h2 mat-dialog-title>Usuwanie</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p>Czy na pewno chcesz usunąć ten film?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Nie</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Tak</button>\r\n</mat-dialog-actions>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:50927'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"container\" (window:scroll)=\"onWindowScroll($event)\">\r\n    <div class=\"row\">\r\n        <movie-filter (applyEvent)=\"onApplyFilters($event)\"></movie-filter>\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"!isLoading; else loadingBlock\">\r\n        <div *ngFor=\"let movie of movies.movieList\" class=\"col-md-4\">\r\n            <a class=\"movie-card-click\" routerLink=\"movie/{{movie.id}}\">\r\n                <mat-card class=\"movie-card-margins\">\r\n                    <img mat-card-image [src]=\"movie.poster == null ? '/assets/images/noMovieImage.png' : getMoviePoster(movie.poster)\">\r\n                    <mat-card-content>\r\n                        <div class=\"d-flex flex-column\">\r\n                            <div class=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    <h2>{{movie.title}}</h2>\r\n                                </div>\r\n                                <div>\r\n                                    <mat-icon class=\"golden-star\">star</mat-icon>\r\n                                    <span class=\"align-middle\">{{movie.averageRating}}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                {{movie.releaseYear}}\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                    <mat-card-footer>\r\n                        <mat-chip-list class=\"mat-chip-list\">\r\n                            <mat-chip *ngFor=\"let genre of movie.genres\" class=\"mat-chip\" color=\"primary\" selected>\r\n                                {{genre}}\r\n                            </mat-chip>\r\n                        </mat-chip-list>\r\n                    </mat-card-footer>\r\n                </mat-card>\r\n            </a>\r\n        </div>\r\n        \r\n        <!-- \r\n        <div *ngFor=\"let movie of movies.movieList\" class=\"col-md-4\">\r\n            <div>\r\n                <img [src]=\"getMoviePoster(movie.poster)\" height=\"300px\" width=\"200px\"/>\r\n            </div>\r\n            <div class=\"d-flex flex-column\">\r\n                <div class=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                        <h2>{{movie.title}}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <mat-icon class=\"golden-star\">star</mat-icon>\r\n                        <span class=\"align-middle\">{{movie.averageRating}}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {{movie.releaseYear}}\r\n                </div>\r\n            </div>\r\n            <mat-chip-list>\r\n                <mat-chip *ngFor=\"let genre of movie.genres\" color=\"primary\" selected>\r\n                    {{genre}}\r\n                </mat-chip>\r\n            </mat-chip-list>\r\n        </div>\r\n        -->\r\n    </div>\r\n\r\n    <div style=\"height: 200px;\">\r\n        <ng-container *ngIf=\"isLoadingMoviePage; then loadingBlock\">\r\n\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #loadingBlock>\r\n    <div class=\"mat-spinner\">\r\n        <mat-spinner color=\"accent\">\r\n        </mat-spinner>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { IMovieFilters } from 'src/app/interfaces/movies/IMovieFilters';\r\nimport { IMovieListWithFilters } from 'src/app/interfaces/movies/IMovieListWithFilters';\r\nimport { MoviesService } from 'src/app/services/movies.service';\r\nimport { IFile } from 'src/app/interfaces/movies//IFile'\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public isLoading: boolean;\r\n  public isLoadingMoviePage: boolean;\r\n  public movies: IMovieListWithFilters = {\r\n    currentPage: 1,\r\n    pageSize: 9,\r\n    allPages: 1,\r\n    allElements: 0,\r\n    movieList: []\r\n  };\r\n  public movieFilters: IMovieFilters = {\r\n    title: '',\r\n    releaseYearFrom: null,\r\n    releaseYearTo: null,\r\n    movieLengthFrom: null,\r\n    movieLengthTo: null,\r\n    avgRatingFrom: null,\r\n    avgRatingTo: null,\r\n    page: 0,\r\n    pageSize: 9,\r\n    orderBy: '',\r\n    genreId: null\r\n  }\r\n\r\n  constructor(private moviesService: MoviesService) {\r\n    this.isLoading = true;\r\n    this.isLoadingMoviePage = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMovies();\r\n  }\r\n\r\n  getMovies() {\r\n    this.movieFilters.page += 1;\r\n\r\n    this.moviesService.getMovies(this.movieFilters).subscribe(data => {\r\n      data.movieList.forEach(movie => {\r\n        this.movies.movieList.push(movie);\r\n      });\r\n      this.movies.allPages = data.allPages;\r\n      this.isLoading = false;\r\n      this.isLoadingMoviePage = false;\r\n    });\r\n  }\r\n\r\n  getMoviePoster(poster: IFile) {\r\n    if(poster != null) {\r\n      return `data:${poster.contentType};base64,${poster.file}`;\r\n    }\r\n    else {\r\n      return `/assets/images/noMovieImage.png`;\r\n    }\r\n  }\r\n\r\n  onApplyFilters(event) {\r\n    let pageSize = this.movieFilters.pageSize;\r\n    this.movieFilters = event;\r\n    this.movieFilters.pageSize = pageSize;\r\n    this.moviesService.getMovies(this.movieFilters).subscribe(data => this.movies = data);\r\n  }\r\n\r\n  onWindowScroll(event) {\r\n    let pos = (document.documentElement.scrollTop || document.body.scrollTop) + document.documentElement.offsetHeight;\r\n    let max = document.documentElement.scrollHeight;\r\n\r\n    if(pos == max && this.movies.allPages > this.movieFilters.page) {\r\n      this.isLoadingMoviePage = true;\r\n      this.getMovies();\r\n    }\r\n  }\r\n}\r\n","import { SnackBarStyle } from './../interfaces/SnackBarStyle';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class NotificationService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  showSnackBarNotification(message: string, buttonText: string, snackBarStyle: SnackBarStyle) {\n    let className = '';\n    switch(snackBarStyle) {\n      case SnackBarStyle.success:\n        className = 'snackbar-success';\n        break;\n      case SnackBarStyle.error:\n        className = 'snackbar-error';\n        break;\n    }\n\n    this.snackBar.open(message, buttonText, {\n      horizontalPosition: 'end',\n      verticalPosition: 'top',\n      duration: 10000,\n      panelClass: [className]\n    })\n  }\n}\n","import { NotificationService } from './../../services/notification.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IGenreFilters } from 'src/app/interfaces/genres/IGenreFilters';\r\nimport { IGenreListWithFilters } from 'src/app/interfaces/genres/IGenreListWithFilters';\r\nimport { GenresService } from 'src/app/services/genres.service';\r\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\r\n\r\n@Component({\r\n  selector: 'admin-genre',\r\n  templateUrl: './admin-genre.component.html',\r\n  styleUrls: ['./admin-genre.component.css']\r\n})\r\nexport class AdminGenreComponent implements OnInit {\r\n\r\n  public isLoading: boolean = true;\r\n  public genres: IGenreListWithFilters = {\r\n    genreList: [],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    allPages: 1,\r\n    allElements: 0\r\n  } \r\n  public genreFilter: IGenreFilters = {\r\n    name: '',\r\n    page: 1,\r\n    pageSize: 10,\r\n    orderBy: '',\r\n  }\r\n  public pageIndex: number;\r\n  public displayedColumns: string[] = ['name', 'description', 'action'];\r\n\r\n  constructor(private genreService: GenresService, private notificationService: NotificationService, public dialog: MatDialog) {\r\n    this.isLoading = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.pageIndex = 0;\r\n    this.genreFilter.pageSize = 10;\r\n    this.getGenres();\r\n  }\r\n\r\n  getGenres() {\r\n    this.genreService.getGenresByName(this.genreFilter).subscribe(result => {\r\n      this.isLoading = true;\r\n      this.genres = result;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onApplyFilters(event) {\r\n    let pageSize = this.genreFilter.pageSize;\r\n    this.genreFilter.pageSize = pageSize;\r\n    this.genreFilter.page = 1;\r\n    this.pageIndex = 0;\r\n    this.getGenres();\r\n  }\r\n\r\n  changePage(event) {\r\n    if (event.pageSize != this.genreFilter.pageSize) {\r\n      this.genreFilter.pageSize = event.pageSize;\r\n    }\r\n    this.pageIndex = event.pageIndex;\r\n\r\n    this.genreFilter.page = this.pageIndex + 1;\r\n    this.getGenres();\r\n  }\r\n\r\n  openDeleteDialog(id) {\r\n    const dialogRef = this.dialog.open(DeleteGenreDialog);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result == true) {\r\n        this.genreService.deleteGenre(id).subscribe(() => {\r\n          this.notificationService.showSnackBarNotification('Pomyślnie usunięto gatunek filmowy', 'Zamknij', SnackBarStyle.success);\r\n          this.getGenres();\r\n        })\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-genre-dialog',\r\n  templateUrl: './delete-genre-dialog.html',\r\n})\r\n\r\nexport class DeleteGenreDialog {}\r\n","<div class=\"col-md-12 filters\">\r\n    <mat-expansion-panel hideToggle>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Filtry\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        \r\n        <div class=\"row no-gutters\">\r\n            <mat-form-field class=\"col-md-4 input-padding-right-25\">\r\n                <mat-label>Nazwa gatunku</mat-label>\r\n                <input matInput type=\"text\" [(ngModel)]=\"genreFilter.name\" />\r\n            </mat-form-field>\r\n\r\n            <div class=\"w-100\"></div>\r\n\r\n            <mat-form-field class=\"col-md-4 input-padding-right-25\">\r\n                <mat-label>Posortuj po</mat-label>\r\n                <mat-select [(ngModel)]=\"genreFilter.orderBy\">\r\n                    <mat-option value=\"nameAsc\">Nazwie (A-Z)</mat-option>\r\n                    <mat-option value=\"nameDesc\">Nazwie (Z-A)</mat-option>\r\n                    <mat-option value=\"descriptionAsc\">Opisie (A-Z)</mat-option>\r\n                    <mat-option value=\"descriptionDesc\">Opisie (Z-A)</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-action-row>\r\n            <button mat-raised-button color=\"accent\" (click)=\"onApplyFilters($event)\">Zatwierdź</button>\r\n        </mat-action-row>\r\n      </mat-expansion-panel>\r\n</div>\r\n\r\n<div class=\"col-md-12 pb-3\">\r\n    <ng-container *ngIf=\"!isLoading\">\r\n        <table mat-table [dataSource]=\"genres.genreList\" class=\"mat-elevation-z8\" multiTemplateDataRows>\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef>Nazwa</th>\r\n                <td mat-cell *matCellDef=\"let genre\"> {{genre.name}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"description\">\r\n                <th mat-header-cell *matHeaderCellDef>Opis</th>\r\n                <td mat-cell *matCellDef=\"let genre\"> {{genre.description}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef >\r\n                    <div class=\"clearfix\">\r\n                        <button mat-mini-fab routerLink=\"/admin/genre/add\" class=\"green-background float-right\" >\r\n                        <mat-icon>add</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let genre\" class=\"clearfix\">\r\n                    <div class=\"float-right\">\r\n                        <button mat-mini-fab color=\"warn\" (click)=\"openDeleteDialog(genre.id)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"float-right mr-2\">\r\n                        <button mat-mini-fab routerLink=\"/admin/genre/edit/{{genre.id}}\" color=\"primary\">\r\n                        <mat-icon>edit</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\"></tr>\r\n                </ng-container>\r\n        </table>\r\n    </ng-container>\r\n</div>\r\n\r\n<div>\r\n    <mat-paginator [length]=\"genres.allElements\" [pageSize]=\"genreFilter.pageSize\" [pageIndex]=\"pageIndex\" [pageSizeOptions]=\"[5,10,15,20]\" showFirstLastButtons (page)=\"changePage($event)\"></mat-paginator>\r\n</div>\r\n","<h2 mat-dialog-title>Usuwanie</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p>Czy na pewno chcesz usunąć ten gatunek filmowy?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Nie</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Tak</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'ClientApp';\r\n\r\n  constructor() {}\r\n    \r\n  ngOnInit() {\r\n  }\r\n}\r\n","<navbar></navbar>\r\n<div class=\"nav-offset\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { IGenreListWithFilters } from '../interfaces/genres/IGenreListWithFilters';\r\nimport { IGenreFilters } from '../interfaces/genres/IGenreFilters';\r\nimport { IGenreList } from '../interfaces/genres/IGenreList';\r\nimport { IGenre } from '../interfaces/genres/IGenre';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\n\r\nexport class GenresService {\r\n\r\n  private url = `${environment.apiUrl}/api/Genre`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  async getGenre(id: number) {\r\n    return this.http.get<IGenre>(`${this.url}/${id}`).toPromise();\r\n  }\r\n\r\n  getGenres(): Observable<IGenreList[]> {\r\n    return this.http.get<IGenreList[]>(this.url + \"/all\");\r\n  }\r\n\r\n  getGenresByName(genre: IGenreFilters): Observable<IGenreListWithFilters> {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('name', genre.name);\r\n    params = params.append('page', genre.page.toString());\r\n    params = params.append('pageSize', genre.pageSize.toString() ? genre.pageSize.toString() : '');\r\n    params = params.append('orderBy', genre.orderBy);\r\n\r\n    return this.http.get<IGenreListWithFilters>(this.url, { headers: headers, params: params});\r\n  }\r\n\r\n  deleteGenre(id: number) {\r\n    return this.http.delete(`${this.url}/${id}`);\r\n  }\r\n\r\n  editGenre(genre: IGenre): Observable<any> {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    let formData: FormData = new FormData();\r\n    formData.append('id', genre.id.toString());\r\n    formData.append('name', genre.name);\r\n    formData.append('description', genre.description);\r\n\r\n    return this.http.put(this.url, formData, { headers: headers });\r\n  }\r\n\r\n  addGenre(genre: IGenre): Observable<any> {\r\n    debugger;\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    let formData: FormData = new FormData();\r\n    formData.append('id', genre.id.toString());\r\n    formData.append('name', genre.name);\r\n    formData.append('description', genre.description);\r\n\r\n    debugger;\r\n    return this.http.post(this.url, formData, { headers: headers });\r\n  }\r\n}\r\n","export enum FilmCrew {\r\n    Actor = 0,\r\n    Director = 1,\r\n    Writer = 2\r\n}","import { IUserReviewInListDTO } from './../../interfaces/reviews/IUserReviewInListDTO';\nimport { IUserReviewListWithFilters } from './../../interfaces/reviews/IUserReviewListWithFilters';\nimport { ReviewService } from './../../services/review.service';\nimport { MoviesService } from 'src/app/services/movies.service';\nimport { IMovieInSelectDTO } from './../../interfaces/movies/IMovieInSelectDTO';\nimport { IUserInSelectDTO } from './../../interfaces/user/IUserInSelectDTO';\nimport { UserService } from 'src/app/services/user.service';\nimport { IAllReviewFilters } from './../../interfaces/reviews/IAllReviewFilters';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'admin-review',\n  templateUrl: './admin-review.component.html',\n  styleUrls: ['./admin-review.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class AdminReviewComponent implements OnInit {\n  reviewFilter: IAllReviewFilters = {\n    userId: null,\n    movieId: null,\n    page: 1,\n    pageSize: 10,\n    orderBy: 'movieasc'\n  };\n  reviews: IUserReviewListWithFilters = {\n    currentPage: 1,\n    pageSize: 10,\n    allPages: 0,\n    allElements: 0,\n    reviewList: []\n  } \n\n  userInput = new FormControl();\n  selectedUser: IUserInSelectDTO;\n  usersInDropdown: IUserInSelectDTO[] = [];\n  movieInput = new FormControl();\n  selectedMovie: IMovieInSelectDTO;\n  moviesInDropdown: IMovieInSelectDTO[] = [];\n\n  isLoading: boolean = true;\n  displayedColumns: string[] = ['movieTitle', 'username', 'rating', 'action'];\n  pageIndex: number;\n  expandedElement: IUserReviewInListDTO | null;\n\n  constructor(private userService: UserService,\n      private movieService: MoviesService,\n      private reviewService: ReviewService) { }\n\n  ngOnInit() {\n    this.getUsersToSelect('');\n    this.getMoviesToSelect('');\n    this.getAllReviews();\n  }\n\n  async getUsersToSelect(startsWith: string) {\n    this.usersInDropdown = await this.userService.getUsersToSelect(startsWith);\n  }\n\n  async getMoviesToSelect(startsWith: string) {\n    this.moviesInDropdown = await this.movieService.getMoviesToSelect(startsWith);\n  }\n\n  getAllReviews() {\n    this.reviewService.getAllReviews(this.reviewFilter).subscribe(data => {\n      this.reviews = data;\n      this.isLoading = false;\n    })\n  }\n\n  getUserFromDropdown(username: string) {\n    return this.usersInDropdown.find(user => user.username == username);\n  }\n\n  getMovieFromDropdown(title: string) {\n    return this.moviesInDropdown.find(movie => movie.title == title);\n  }\n\n  selectUser(event: MatAutocompleteSelectedEvent): void {\n    let user = this.getUserFromDropdown(event.option.viewValue)\n    this.selectedUser = user;\n  }\n\n  selectMovie(event: MatAutocompleteSelectedEvent): void {\n    let movie = this.getMovieFromDropdown(event.option.viewValue)\n    this.selectedMovie = movie;\n  }\n\n  async onUserInputChange(startsWith) {\n    this.getMoviesToSelect(startsWith);\n  }\n\n  async onMovieInputChange(startsWith) {\n    this.getMoviesToSelect(startsWith);\n  }\n\n  clearUser() {\n    this.selectedUser = null;\n    this.userInput.setValue('');\n  }\n\n  clearMovie() {\n    this.selectedMovie = null;\n    this.movieInput.setValue('');\n  }\n\n  changePage(event) {\n    if (event.pageSize != this.reviewFilter.pageSize) {\n      this.reviewFilter.pageSize = event.pageSize;\n    }\n    this.pageIndex = event.pageIndex;\n\n    this.reviewFilter.page = this.pageIndex + 1;\n    this.getAllReviews();\n  }\n\n  async expandReviewDetails(element) {\n\n    if(this.expandedElement === element) {\n      this.expandedElement = null;\n    }\n    else {\n        this.expandedElement = element;\n    }\n  }\n\n  onApplyFilters(event) {\n    this.reviewFilter.movieId = this.selectedMovie?.id;\n    this.reviewFilter.userId = this.selectedUser?.id;\n    this.getAllReviews();\n  }\n}\n","<div class=\"col-md-12 filters\">\n    <mat-expansion-panel hideToggle>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            Filtry\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        \n        <div class=\"row no-gutters\">\n            <mat-form-field class=\"input-padding-right-25 col-md-6 \">\n                <mat-label>Tytuł filmu</mat-label>\n                <input type=\"text\"\n                       placeholder=\"Wybierz\"\n                       aria-label=\"Number\"\n                       matInput\n                       [formControl]=\"movieInput\"\n                       [matAutocomplete]=\"autoMovie\"\n                       (input)=\"onUserInputChange($event.target.value)\"\n                       >\n                       <button mat-button *ngIf=\"movieInput.value != null && movieInput.value !== ''\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearMovie()\">\n                        <mat-icon>close</mat-icon>\n                      </button>\n                <mat-autocomplete autoActiveFirstOption #autoMovie=\"matAutocomplete\" (optionSelected)=\"selectMovie($event)\">\n                  <mat-option *ngFor=\"let movie of moviesInDropdown\" [value]=\"movie.title\">\n                    {{movie.title}}\n                  </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n            <mat-form-field class=\"input-padding-right-25 col-md-6\">\n                <mat-label>Użytkownik</mat-label>\n                <input type=\"text\"\n                       placeholder=\"Wybierz\"\n                       aria-label=\"Number\"\n                       matInput\n                       [formControl]=\"userInput\"\n                       [matAutocomplete]=\"autoUser\"\n                       (input)=\"onUserInputChange($event.target.value)\"\n                       >\n                       <button mat-button *ngIf=\"userInput.value != null && userInput.value !== ''\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearUser()\">\n                        <mat-icon>close</mat-icon>\n                      </button>\n                <mat-autocomplete autoActiveFirstOption #autoUser=\"matAutocomplete\" (optionSelected)=\"selectUser($event)\">\n                  <mat-option *ngFor=\"let user of usersInDropdown\" [value]=\"user.username\">\n                    {{user.username}}\n                  </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n\n            <div class=\"w-100\"></div>\n\n            <mat-form-field class=\"col-md-4 input-padding-right-25\">\n                <mat-label>Posortuj po</mat-label>\n                <mat-select [(ngModel)]=\"reviewFilter.orderBy\">\n                    <mat-option value=\"movieasc\">Tytule (A-Z)</mat-option>\n                    <mat-option value=\"moviedesc\">Tytule (Z-A)</mat-option>\n                    <mat-option value=\"ratingasc\">Ocenie (rosnąco)</mat-option>\n                    <mat-option value=\"ratingdesc\">Ocenie (malejąco)</mat-option>\n                    <mat-option value=\"userid\">Grupuj użytkowników</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <mat-action-row>\n            <button mat-raised-button color=\"accent\" (click)=\"onApplyFilters($event)\">Zatwierdź</button>\n        </mat-action-row>\n      </mat-expansion-panel>\n</div>\n\n<div class=\"col-md-12 pb-3\">\n    <ng-container *ngIf=\"!isLoading\">\n      <table mat-table [dataSource]=\"reviews.reviewList\" class=\"mat-elevation-z8\" multiTemplateDataRows>\n                <ng-container matColumnDef=\"movieTitle\">\n                  <th mat-header-cell *matHeaderCellDef>Tytuł filmu</th>\n                  <td mat-cell *matCellDef=\"let review\">{{review.movieTitle}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"username\">\n                  <th mat-header-cell *matHeaderCellDef>Użytkownik</th>\n                  <td mat-cell *matCellDef=\"let review\">{{review.username}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"rating\">\n                  <th mat-header-cell *matHeaderCellDef>Ocena</th>\n                  <td mat-cell *matCellDef=\"let review\">\n                    <div class=\"clearfix d-flex align-items-center\">\n                        <mat-icon class=\"golden-star float-left\">star</mat-icon>\n                        <span class=\"float-left\">\n                            {{review.rating}}\n                        </span>\n                    </div>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"action\">\n                  <th mat-header-cell *matHeaderCellDef >\n                    <div class=\"clearfix\">\n                      <button mat-mini-fab class=\"green-background float-right\">\n                        <mat-icon>add</mat-icon>\n                      </button>\n                    </div>\n                  </th>\n                  <td mat-cell *matCellDef=\"let person\" class=\"clearfix\">\n                    <div class=\"float-right\">\n                      <button mat-mini-fab color=\"warn\" class=\"custom-button-icon\">\n                        <mat-icon class=\"custom-icon\">delete</mat-icon>\n                      </button>\n                    </div>\n                    <div class=\"float-right mr-2\">\n                      <button mat-mini-fab class=\"custom-button-icon\" color=\"primary\">\n                        <mat-icon class=\"custom-icon\">edit</mat-icon>\n                      </button>\n                    </div>\n                  </td>\n                </ng-container>\n                <ng-container matColumnDef=\"expandedDetail\">\n                    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                      <div class=\"example-element-detail\"\n                          [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                            <div>\n                                <div class=\"collapse-header\">{{element.message == null || element.message.length == 0 ? 'Nie dodano treści recenzji' : 'Treść recenzji'}}</div>\n                                <div>\n                                    {{element.message}}\n                                </div>\n                        </div>\n                      </div>\n                    </td>\n                  </ng-container> \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\" [class.example-expanded-row]=\"expandedElement === element\" (click)=\"expandReviewDetails(element)\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n    </ng-container>\n</div>\n<div>\n      <mat-paginator [length]=\"reviews.allElements\" [pageSize]=\"reviews.pageSize\" [pageIndex]=\"pageIndex\" [pageSizeOptions]=\"[5,10,20,50]\" showFirstLastButtons (page)=\"changePage($event)\"></mat-paginator>\n</div>","import { SnackBarStyle } from './../../interfaces/SnackBarStyle';\r\nimport { NotificationService } from './../../services/notification.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public hide: boolean = true;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  public password: string;\r\n  private returnUrl: string;\r\n\r\n  public errorMessage: string = '';\r\n  \r\n  constructor(private authService: AuthService,\r\n      private notificationService: NotificationService,\r\n      private route: ActivatedRoute,\r\n      private router: Router) { \r\n    \r\n    if (this.authService.currentUserValue) { \r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return 'Email nie może być pusty';\r\n    }\r\n\r\n    return this.email.hasError('email') ? 'Zły format emaila' : '';\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.email.invalid || this.password === null || this.password === undefined || this.password.length === 0) {\r\n      return;\r\n    }\r\n\r\n    this.authService.login(this.email.value, this.password).pipe(first()).subscribe(response => {\r\n          if(response.invalidEmailOrPassword) {\r\n            this.errorMessage = \"Niepoprawny login bądź hasło\"\r\n            return;\r\n          }\r\n          if(!response.hasConfirmedEmail) {\r\n            this.errorMessage = \"Email nie został jeszcze potwierdzony, sprawdź skrzynkę pocztową\";\r\n            return;\r\n          }\r\n\r\n          if(!response.success) {\r\n            this.errorMessage = \"Coś poszło nie tak!\";\r\n            return;\r\n          }\r\n          else {\r\n            this.notificationService.showSnackBarNotification('Pomyślnie zalogowano!', 'Zamknij', SnackBarStyle.success);\r\n            this.router.navigate([this.returnUrl]);\r\n            return;\r\n          }\r\n        },\r\n        error => {\r\n          this.errorMessage = \"Coś poszło nie tak\";\r\n        });\r\n  }\r\n}\r\n","<div class=\"container\">\n    <div class=\"wrapper fadeInDown\">\n        <div id=\"formContent\">\n            <div class=\"fadeIn first\">\n                 <div class=\"custom-header\">LOGOWANIE</div>\n            </div>\n            <div>\n                <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\n                    <mat-label>Email</mat-label>\n                    <input matInput #input maxlength=\"100\" type=\"text\" [formControl]=\"email\" placeholder=\"kowalski@przyklad.pl\"/>\n                    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\n                    <mat-label>Hasło</mat-label>\n                    <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"password\" maxlength=\"100\">\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                </mat-form-field>\n                <div *ngIf=\"errorMessage !== ''\" class=\"error-message\">\n                  {{ errorMessage }}\n                </div>\n                <div class=\"custom-button\">\n                    <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">Zaloguj</button>\n                </div>\n            </div>\n            <div id=\"formFooter\">\n                <a class=\"underlineHover\" >Przypomnij hasło</a>\n            </div>\n        </div>\n      </div>\n</div>\n\n\n<!--<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"custom-header\">LOGOWANIE</div>\n        <div class=\"mat-inputs\">\n            <mat-form-field hintLabel=\"Max 100 znaków\" appearance=\"fill\" class='mat-form-field-custom col-md-6'>\n                <mat-label>Imie</mat-label>\n                <input matInput #input maxlength=\"100\" type=\"text\" [formControl]=\"personnelName\"/>\n                <mat-hint align=\"end\">{{personnelName.value?.length || 0}}/100</mat-hint>\n                <mat-error *ngIf=\"personnelName.invalid\">{{ getNameErrorMessage() }}</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"confirm-button\">\n\n        </div>\n    </div>\n</div>-->","import { Router } from '@angular/router';\nimport { NotificationService } from './../../services/notification.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { IRegisterDTO } from 'src/app/interfaces/auth/IRegisterDTO';\nimport { first } from 'rxjs/operators';\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\n    const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\n\n    return (invalidCtrl || invalidParent);\n  }\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  hide: boolean = true;\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private formBuilder: FormBuilder,\n      private authService: AuthService,\n      private notificationService: NotificationService,\n      private router: Router) {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', [Validators.required, Validators.minLength(5), Validators.pattern(`^[\\\\w\\\\d]*$`)]],\n      password: ['', [Validators.required, Validators.minLength(5), Validators.pattern(`^[\\\\S]*(?=.*\\\\d)(?=.*[a-z])[\\\\S]*$`)]],\n      confirmedPassword: [''],\n      name: ['', [Validators.required]],\n      surname: ['', [Validators.required]]\n    }, {validator: this.checkPasswords})\n   }\n\n  ngOnInit(): void {\n    //this.registerForm.valueChanges.subscribe(() => {})\n  }\n\n  checkPasswords(group: FormGroup) {\n    let pass = group.controls.password.value;\n    let confirmedPass = group.controls.confirmedPassword.value;\n\n    return pass === confirmedPass ? null : { notSame: true}\n  }\n  \n  getPasswordErrorMessage() {\n    let control = this.registerForm.controls.password;\n\n    if(control.hasError('required')) {\n      return 'Hasło nie może być puste';\n    }\n\n    if(control.hasError('minlength')) {\n      return `Hasło musi zawierać ${control.getError('minlength').requiredLength} znaków`;\n    }\n\n    if(control.hasError('pattern')) {\n      return 'Hasło musi zawierać małą literę oraz cyfrę';\n    }\n    \n    return '';\n  }\n\n  getEmailErrorMessage() {\n    let control = this.registerForm.controls.email;\n\n    if(control.hasError('required')) {\n      return 'Email nie może być pusty';\n    }\n\n    if(control.hasError('email')) {\n      return `Zły format emaila`;\n    }\n    \n    return '';\n  }\n\n  getUsernameErrorMessage() {\n    let control = this.registerForm.controls.username;\n\n    if(control.hasError('required')) {\n      return 'Nazwa użytkownika nie może być pusta';\n    }\n\n    if(control.hasError('minlength')) {\n      return `Nazwa użytkownika musi zawierać ${control.getError('minlength').requiredLength} znaków`;\n    }\n\n    if(control.hasError('pattern')) {\n      return 'Nazwa użytkownika musi składać się tylko ze znaków alfanumerycznych';\n    }\n    \n    return '';\n  }\n\n  onSubmit() {\n    if(this.registerForm.invalid) {\n      return;\n    }\n    let controls = this.registerForm.controls;\n    this.authService.register(<IRegisterDTO> {\n      username: controls.username.value,\n      password: controls.password.value,\n      confirmedPassword: controls.confirmedPassword.value,\n      email: controls.email.value,\n      name: controls.name.value,\n      surname: controls.surname.value\n    }).pipe(first())\n    .subscribe(\n        response => {\n          debugger;\n          let error = '';\n          if(response.usernameTaken && response.emailTaken) {\n            error += \"Email oraz nazwa użytkownika już istnieją!\"\n          }\n          else if(response.emailTaken) {\n            error = \"Email już istnieje!\"\n          }\n          else if(response.usernameTaken) {\n            error = \"Nazwa użytkownika już istnieje!\";\n          }\n\n          if(error != '') {\n            if(response.usernameTaken && response.emailTaken) {\n              this.notificationService.showSnackBarNotification(error, 'Zamknij', SnackBarStyle.error)\n              return;\n            }\n          }\n\n          if(response.success) {\n            this.notificationService.showSnackBarNotification('Pomyślnie stworzono konto, potwierdź email!', 'Zamknij', SnackBarStyle.success);\n            this.router.navigate(['/']);\n          }\n        },\n        error => {\n        });\n  }\n}\n","<div class=\"container\">\n    <div class=\"wrapper fadeInDown\">\n        <div id=\"formContent\">\n            <div class=\"fadeIn first\">\n                 <div class=\"custom-header\">REJESTRACJA</div>\n            </div>\n            \n            <div>\n                <form [formGroup]=registerForm (ngSubmit)=\"onSubmit()\">\n                    <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\n                        <mat-label>Email</mat-label>\n                        <input matInput #input maxlength=\"100\" type=\"text\" formControlName=\"email\" placeholder=\"kowalski@przyklad.pl\" required/>\n                        <mat-error *ngIf=\"registerForm.controls.email.errors\">{{ getEmailErrorMessage() }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\n                        <mat-label>Nazwa użytkownika</mat-label>\n                        <input matInput #input maxlength=\"50\" type=\"text\" formControlName=\"username\"/>\n                        <mat-error *ngIf=\"registerForm.controls.username.errors\">{{ getUsernameErrorMessage() }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\n                        <mat-label>Hasło</mat-label>\n                        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" minlength=\"5\" maxlength=\"100\" required>\n                        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                        </button>\n                        <mat-error *ngIf=\"registerForm.controls.password.errors\">{{ getPasswordErrorMessage() }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\n                        <mat-label>Potwierdź hasło</mat-label>\n                        <input matInput type=\"password\" formControlName=\"confirmedPassword\" [errorStateMatcher]=\"matcher\" maxlength=\"100\" required>\n                        <mat-error *ngIf=\"registerForm.hasError('notSame')\">\n                            Hasła nie pasują do siebie\n                        </mat-error> \n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\n                        <mat-label>Imię</mat-label>\n                        <input matInput #input maxlength=\"100\" type=\"text\" formControlName=\"name\" required/>\n                        <mat-error *ngIf=\"registerForm.controls.name.hasError('required')\">Imię nie może być puste</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\n                        <mat-label>Nazwisko</mat-label>\n                        <input matInput #input maxlength=\"100\" type=\"text\" formControlName=\"surname\" required/>\n                        <mat-error *ngIf=\"registerForm.controls.name.hasError('required')\">Nazwisko nie może być puste</mat-error>\n                    </mat-form-field>\n                    <div class=\"custom-button\">\n                        <button mat-raised-button color=\"primary\" type=\"submit\" >Zaloguj</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n      </div>\n</div>","import { AddEditGenreComponent } from './components/add-edit-genre/add-edit-genre.component';\r\nimport { AdminGenreComponent, DeleteGenreDialog } from './components/admin-genre/admin-genre.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { MoviesService } from './services/movies.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { GenresService } from './services/genres.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { AdminMovieComponent, DeleteMovieDialog } from './components/admin-movie/admin-movie.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MovieFilterComponent } from './components/movie-filter/movie-filter.component';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { AddEditMovieComponent } from './components/add-edit-movie/add-edit-movie.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PersonnelService } from './services/personnel.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { AdminPersonnelComponent, DeletePersonnelDialog } from './components/admin-personnel/admin-personnel.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport localePl from '@angular/common/locales/pl';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AddEditPersonnelComponent } from './components/add-edit-personnel/add-edit-personnel.component';\r\nimport { MovieComponent } from './components/movie/movie.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NotificationService } from './services/notification.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { UserService } from './services/user.service';\r\nimport { appRoutingModule } from './app.routing';\r\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\r\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\r\nimport { AdminUserComponent, DeleteUserDialog } from './components/admin-user/admin-user.component';\r\nimport { AdminReviewComponent } from './components/admin-review/admin-review.component';\r\nimport { ReviewService } from './services/review.service';\r\nimport { MovieReviewComponent } from './components/movie-review/movie-review.component';\r\nimport { StarRatingModule } from 'angular-star-rating';\r\n\r\nregisterLocaleData(localePl);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    AdminPanelComponent,\r\n    AdminMovieComponent,\r\n    MovieFilterComponent,\r\n    AddEditMovieComponent,\r\n    DeleteMovieDialog,\r\n    AdminPersonnelComponent,\r\n    DeletePersonnelDialog,\r\n    AddEditPersonnelComponent,\r\n    AdminGenreComponent,\r\n    AddEditGenreComponent,\r\n    DeleteGenreDialog,\r\n    MovieComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AdminUserComponent,\r\n    DeleteUserDialog,\r\n    AdminReviewComponent,\r\n    MovieReviewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    appRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSnackBarModule,\r\n    StarRatingModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    MoviesService, \r\n    GenresService,\r\n    PersonnelService,\r\n    NotificationService,\r\n    AuthService,\r\n    UserService,\r\n    ReviewService,\r\n    {provide: localePl, useValue: 'pl'},\r\n    {provide: MAT_DATE_LOCALE, useValue: 'pl-PL'},\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { UserRole } from './interfaces/auth/role';\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\r\nimport { AddEditMovieComponent } from './components/add-edit-movie/add-edit-movie.component';\r\nimport { AddEditGenreComponent } from './components/add-edit-genre/add-edit-genre.component';\r\nimport { AddEditPersonnelComponent } from './components/add-edit-personnel/add-edit-personnel.component';\r\nimport { MovieComponent } from './components/movie/movie.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst routes: Routes = [\r\n    { \r\n        path: '',\r\n        component: HomeComponent\r\n    },\r\n    {\r\n        path: 'admin/movie/add',\r\n        component: AddEditMovieComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: [UserRole.Admin] }\r\n    },\r\n    {\r\n        path: 'admin/movie/edit/:id',\r\n        component: AddEditMovieComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: [UserRole.Admin] }\r\n    },\r\n    {\r\n        path: 'admin/genre/add',\r\n        component: AddEditGenreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: [UserRole.Admin] }\r\n    },\r\n    {\r\n        path: 'admin/genre/edit/:id',\r\n        component: AddEditGenreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: [UserRole.Admin] }\r\n    },\r\n    {\r\n        path: 'admin/personnel/add',\r\n        component: AddEditPersonnelComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: [UserRole.Admin] }\r\n    },\r\n    {\r\n        path: 'admin/personnel/edit/:id',\r\n        component: AddEditPersonnelComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: [UserRole.Admin] }\r\n    },\r\n    {\r\n        path: 'admin/:tab',\r\n        component: AdminPanelComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: [UserRole.Admin] }\r\n    },\r\n    {\r\n        path: 'movie/:id',\r\n        component: MovieComponent\r\n    },\r\n    {\r\n        path: 'signin',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: RegisterComponent\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: ''\r\n    }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);","export enum SnackBarStyle {\r\n    success = 0,\r\n    error = 1\r\n}","import { NotificationService } from './../../services/notification.service';\r\nimport { IPersonnelInSelectDTO } from './../../interfaces/personnel/IPersonnelInSelectDTO';\r\nimport { PersonnelService } from './../../services/personnel.service';\r\nimport { IGenreList } from './../../interfaces/genres/IGenreList';\r\nimport { GenresService } from './../../services/genres.service';\r\nimport { MoviesService } from 'src/app/services/movies.service';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IMovieDTO } from 'src/app/interfaces/movies/IMovieDTO';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { FilmCrew } from 'src/app/interfaces/FilmCrew';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { IFile } from 'src/app/interfaces/movies/IFile';\r\nimport { Location } from '@angular/common';\r\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\r\n\r\nconst numberOfItems = 5;\r\n\r\n@Component({\r\n  selector: 'app-add-edit-movie',\r\n  templateUrl: './add-edit-movie.component.html',\r\n  styleUrls: ['./add-edit-movie.component.css']\r\n})\r\nexport class AddEditMovieComponent implements OnInit {\r\n  public notFound: boolean;\r\n  public isLoading: boolean;\r\n  public editMode: boolean;\r\n  public movie: IMovieDTO;\r\n  public genreList: IGenreList[];\r\n  movieId: number;\r\n  movieTitle = new FormControl('', [Validators.required, Validators.maxLength(100)]);\r\n  movieDescription = new FormControl('', [Validators.maxLength(2000)]);\r\n  movieReleaseYear = new FormControl('', [Validators.required, Validators.min(1900), Validators.max(2300)]);\r\n  movieLengthInMinutes = new FormControl('', [Validators.required, Validators.min(1), Validators.max(1000000)]);\r\n  file: any;\r\n  fileToUpload: File;\r\n  selectedGenres = new FormControl();\r\n  titleExistError: boolean;\r\n\r\n  selectedActors: IPersonnelInSelectDTO[] = [];\r\n  selectedDirectors: IPersonnelInSelectDTO[] = [];\r\n  selectedWriters: IPersonnelInSelectDTO[] = [];\r\n\r\n  actorsInDropdown: IPersonnelInSelectDTO[];\r\n  directorsInDropdown: IPersonnelInSelectDTO[];\r\n  writersInDropdown: IPersonnelInSelectDTO[];\r\n\r\n  actorInputInDropdown = new FormControl();\r\n  directorInputInDropdown = new FormControl();\r\n  writerInputInDropdown = new FormControl();\r\n\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  @ViewChild('actorInput') actorInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  @ViewChild('directorInput') directorInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('autoDirector') matAutocompleteDirector: MatAutocomplete;\r\n\r\n  @ViewChild('writerInput') writerInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('autoWriter') matAutocompleteWriter: MatAutocomplete;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private movieService: MoviesService,\r\n    private genreService: GenresService,\r\n    private personnelService: PersonnelService,\r\n    private notificationService: NotificationService,\r\n    private location: Location) { \r\n      this.isLoading = true;\r\n      this.notFound = false;\r\n      this.titleExistError = false;\r\n      this.actorsInDropdown = [];\r\n      this.directorsInDropdown = [];\r\n      this.writersInDropdown = [];\r\n      this.actorInputInDropdown.setValue(null);\r\n      this.directorInputInDropdown.setValue(null);\r\n      this.writerInputInDropdown.setValue(null);\r\n\r\n      this.movie = {\r\n        id: 0,\r\n        title: \"\",\r\n        description: \"\",\r\n        releaseYear: 0,\r\n        movieLengthInMinutes: 0,\r\n        file: null,\r\n        updatePhoto: false,\r\n        crew: [],\r\n        genres: []\r\n      }\r\n    }\r\n\r\n  async ngOnInit() {    \r\n    this.route.url.subscribe(urlSegments => {\r\n      this.editMode = urlSegments[2].path === 'edit';\r\n\r\n      this.genreService.getGenres().subscribe(data => this.genreList = data);\r\n      \r\n      if(this.editMode === true) {\r\n        this.getMovie(this.route.snapshot.params.id)\r\n      }\r\n      else {\r\n        this.movieId = 0;\r\n        this.movieTitle.setValue('');\r\n        this.movieDescription.setValue('');\r\n        this.movieReleaseYear.setValue('');\r\n        this.movieLengthInMinutes.setValue('');\r\n        this.file = null;\r\n        this.selectedActors = [];\r\n        this.selectedDirectors = [];\r\n        this.selectedWriters = [];\r\n        this.selectedGenres = new FormControl();\r\n\r\n        this.getPersonnelToSelect();\r\n      }\r\n    });\r\n  }\r\n\r\n  async getPersonnelToSelect() {\r\n    let selectedActorsIndexes = this.selectedActors.map(a => a.id);\r\n    let selectedDirectorsIndexes = this.selectedDirectors.map(a => a.id);\r\n    let selectedWritersIndexes = this.selectedWriters.map(a => a.id);\r\n\r\n    this.actorsInDropdown = await this.personnelService.getPersonnelToSelectList(numberOfItems, \"\", selectedActorsIndexes);\r\n    this.directorsInDropdown = await this.personnelService.getPersonnelToSelectList(numberOfItems, \"\", selectedDirectorsIndexes);\r\n    this.writersInDropdown = await this.personnelService.getPersonnelToSelectList(numberOfItems, \"\", selectedWritersIndexes);\r\n    this.isLoading = false;\r\n  }\r\n\r\n  async getMovie(id) {\r\n    try {\r\n      let getMovieDTO = await this.movieService.getMovie(id);\r\n      let genres = getMovieDTO.genres.map(g => g.genreId);\r\n\r\n      getMovieDTO.personnel.forEach(person => {\r\n        let personInSelect = <IPersonnelInSelectDTO>{\r\n          id: person.personId,\r\n          name: person.name,\r\n          surname: person.surname\r\n        }\r\n\r\n        if (person.memberPosition === FilmCrew.Actor) {\r\n          this.selectedActors.push(personInSelect)\r\n        }\r\n        else if (person.memberPosition === FilmCrew.Director) {\r\n          this.selectedDirectors.push(personInSelect)\r\n        } \r\n        else if(person.memberPosition === FilmCrew.Writer) {\r\n          this.selectedWriters.push(personInSelect)\r\n        }\r\n      })\r\n\r\n      this.movieId = getMovieDTO.id;\r\n      this.movieTitle.setValue(getMovieDTO.title);\r\n      this.movieDescription.setValue(getMovieDTO.description);\r\n      this.movieReleaseYear.setValue(getMovieDTO.releaseYear);\r\n      this.movieLengthInMinutes.setValue(getMovieDTO.movieLengthInMinutes);\r\n      this.file = this.getMoviePoster(getMovieDTO.moviePoster);\r\n      this.selectedGenres.setValue(genres);\r\n\r\n      this.getPersonnelToSelect();\r\n    }\r\n    catch(exception) {\r\n      this.isLoading = false;\r\n      this.notFound = true;\r\n    }\r\n  }\r\n\r\n  getMoviePoster(poster: IFile) {\r\n    if(poster != null) {\r\n      return `data:${poster.contentType};base64,${poster.file}`;\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  uploadMoviePoster(event) {\r\n    if(event.target.files != null) {\r\n      this.fileToUpload = event.target.files[0];\r\n      this.movie.updatePhoto = true;\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.file = reader.result as string;\r\n      }\r\n      reader.readAsDataURL(this.fileToUpload)\r\n    }\r\n\r\n    else {\r\n      this.file = '';\r\n      this.movie.updatePhoto = false;\r\n    }\r\n  }\r\n\r\n  onReturn() {\r\n    this.location.back();\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.movieTitle.invalid ||\r\n      this.movieDescription.invalid ||\r\n      this.movieReleaseYear.invalid ||\r\n      this.movieLengthInMinutes.invalid) {\r\n        this.notificationService.showSnackBarNotification('Nie wszystkie pola są poprawne', 'Zamknij', SnackBarStyle.error);\r\n        return;\r\n      }\r\n\r\n    this.movie.id = this.movieId;\r\n    this.movie.title = this.movieTitle.value;\r\n    this.movie.description = this.movieDescription.value;\r\n    this.movie.releaseYear = this.movieReleaseYear.value;\r\n    this.movie.movieLengthInMinutes = this.movieLengthInMinutes.value;\r\n    this.movie.file = this.fileToUpload;\r\n    this.movie.genres = this.selectedGenres.value\r\n\r\n    //actors\r\n    this.selectedActors.forEach(actor => {\r\n      this.movie.crew.push({ personnelId: actor.id, filmCrew: FilmCrew.Actor})\r\n    });\r\n\r\n    //directors\r\n    this.selectedDirectors.forEach(director => {\r\n      this.movie.crew.push({ personnelId: director.id, filmCrew: FilmCrew.Director})\r\n    });\r\n\r\n    //writers\r\n    this.selectedWriters.forEach(writer => {\r\n      this.movie.crew.push({ personnelId: writer.id, filmCrew: FilmCrew.Writer})\r\n    });\r\n\r\n    if(this.editMode) {\r\n      this.movieService.editMovie(this.movie).subscribe(data => {\r\n        if(data == true) {\r\n          this.notificationService.showSnackBarNotification('Pomyślnie wprowadzono zmiany', 'Zamknij', SnackBarStyle.success);\r\n          this.location.back();\r\n        } else {\r\n          this.titleExistError = true;\r\n        }\r\n      });\r\n    } else {\r\n      this.movieService.addMovie(this.movie).subscribe(data => {\r\n        if(data == true) {\r\n          this.notificationService.showSnackBarNotification('Pomyślnie dodano nowy film', 'Zamknij', SnackBarStyle.success);\r\n          this.location.back();\r\n        } else {\r\n          this.titleExistError = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getTitleErrorMessage() {\r\n    if (this.movieTitle.hasError('required')) {\r\n      return 'Tytuł nie może być pusty';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getReleaseYearErrorMessage() {\r\n    if(this.movieReleaseYear.hasError('required')) {\r\n      return 'Rok nie może być pusty'\r\n    }\r\n    if(this.movieReleaseYear.hasError('min')) {\r\n      return 'Rok nie może być mniejszy niż 1900';\r\n    }\r\n    if(this.movieReleaseYear.hasError('max')) {\r\n      return 'Rok nie może być większy niż 2300';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getTimeInMinutesErrorMessage() {\r\n    if(this.movieReleaseYear.hasError('required')) {\r\n      return 'Czas trwania filmu  nie może być pusty'\r\n    }\r\n    if(this.movieReleaseYear.hasError('min')) {\r\n      return 'Czas trwania filmu nie może być mniejszy niż 1 minuta';\r\n    }\r\n    if(this.movieReleaseYear.hasError('max')) {\r\n      return 'Czas trwania filmu nie może być większy niż 1.000.000 minut';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getDescriptionErrorMessage() {\r\n    return this.movieTitle.hasError('maxLength') ? 'Tytuł jest za długi' : '';\r\n  }\r\n\r\n  removeActor(actor: IPersonnelInSelectDTO): void {\r\n    const index = this.selectedActors.indexOf(actor);\r\n\r\n    if (index >= 0) {\r\n      this.selectedActors.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addActor(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    let foundPerson = this.checkIfObjectIsInList(value, this.actorsInDropdown)\r\n\r\n    if (foundPerson != null && !this.checkIfActorIsInSelectedList(foundPerson)) {\r\n      this.selectedActors.push(foundPerson);\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n    this.actorInputInDropdown.setValue(null);\r\n  }\r\n\r\n  checkIfObjectIsInList(fullName: string, list: IPersonnelInSelectDTO[]) {\r\n    let foundPerson: IPersonnelInSelectDTO = null;\r\n    list.forEach(person => {\r\n      let personFullName = (person.name + ' '+ person.surname);\r\n      if(personFullName.startsWith(fullName)) {\r\n        foundPerson = person;\r\n        return;\r\n      }\r\n    });\r\n\r\n    return foundPerson;\r\n  }\r\n\r\n  checkIfActorIsInSelectedList(actor: IPersonnelInSelectDTO): boolean {\r\n    if(actor == null) {\r\n      return true;\r\n    }\r\n    let actorExist = false;\r\n    this.selectedActors.forEach(person => {\r\n      if(actor.id == person.id) {\r\n        actorExist = true;\r\n        return;\r\n      }\r\n    })\r\n    return actorExist;\r\n  }\r\n\r\n  checkIfDirectorIsInSelectedList(director: IPersonnelInSelectDTO): boolean {\r\n    if(director == null) {\r\n      return true;\r\n    }\r\n    let directorExist = false;\r\n    this.selectedDirectors.forEach(person => {\r\n      if(director.id == person.id) {\r\n        directorExist = true;\r\n        return;\r\n      }\r\n    })\r\n    return directorExist;\r\n  }\r\n\r\n  checkIfWriterIsInSelectedList(writer: IPersonnelInSelectDTO): boolean {\r\n    if(writer == null) {\r\n      return true;\r\n    }\r\n    let writerExist = false;\r\n    this.selectedWriters.forEach(person => {\r\n      if(writer.id == person.id) {\r\n        writerExist = true;\r\n        return;\r\n      }\r\n    })\r\n    return writerExist;\r\n  }\r\n\r\n  selectedActor(event: MatAutocompleteSelectedEvent): void {\r\n    let foundPerson = this.checkIfObjectIsInList(event.option.viewValue, this.actorsInDropdown)\r\n    if(foundPerson != null && !this.checkIfActorIsInSelectedList(foundPerson)) {\r\n      this.selectedActors.push(foundPerson);\r\n    }\r\n    this.actorInput.nativeElement.value = '';\r\n    this.actorInputInDropdown.setValue(null);\r\n    this.onActorInputChange(\"\");\r\n  }\r\n\r\n  async onActorInputChange(value) {\r\n    let selectedActorsIndexes = this.selectedActors.map(a => a.id);\r\n    this.actorsInDropdown = await this.personnelService.getPersonnelToSelectList(numberOfItems, value, selectedActorsIndexes);\r\n  }\r\n\r\n  removeDirector(director: IPersonnelInSelectDTO): void {\r\n    const index = this.selectedDirectors.indexOf(director);\r\n\r\n    if (index >= 0) {\r\n      this.selectedDirectors.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addDirector(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    let foundPerson = this.checkIfObjectIsInList(value, this.directorsInDropdown)\r\n\r\n    if (foundPerson != null && !this.checkIfDirectorIsInSelectedList(foundPerson)) {\r\n      this.selectedDirectors.push(foundPerson);\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n    this.directorInputInDropdown.setValue(null);\r\n  }\r\n\r\n  selectedDirector(event: MatAutocompleteSelectedEvent): void {\r\n    let foundPerson = this.checkIfObjectIsInList(event.option.viewValue, this.directorsInDropdown)\r\n    if(foundPerson != null && !this.checkIfDirectorIsInSelectedList(foundPerson)) {\r\n      this.selectedDirectors.push(foundPerson);\r\n    }\r\n\r\n    this.directorInput.nativeElement.value = '';\r\n    this.directorInputInDropdown.setValue(null);\r\n    this.onDirectorInputChange(\"\")\r\n  }\r\n\r\n  async onDirectorInputChange(value) {\r\n    let selectedDirectorsIndexes = this.selectedDirectors.map(a => a.id);\r\n    this.directorsInDropdown = await this.personnelService.getPersonnelToSelectList(numberOfItems, value, selectedDirectorsIndexes);\r\n  }\r\n\r\n  removeWriter(writer: IPersonnelInSelectDTO): void {\r\n    const index = this.selectedWriters.indexOf(writer);\r\n\r\n    if (index >= 0) {\r\n      this.selectedWriters.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addWriter(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    let foundPerson = this.checkIfObjectIsInList(value, this.writersInDropdown)\r\n\r\n    if (foundPerson != null && !this.checkIfWriterIsInSelectedList(foundPerson)) {\r\n      this.selectedWriters.push(foundPerson);\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n    this.writerInputInDropdown.setValue(null);\r\n  }\r\n\r\n  selectedWriter(event: MatAutocompleteSelectedEvent): void {\r\n    let foundPerson = this.checkIfObjectIsInList(event.option.viewValue, this.writersInDropdown)\r\n    if(foundPerson != null && !this.checkIfWriterIsInSelectedList(foundPerson)) {\r\n      this.selectedWriters.push(foundPerson);\r\n    }\r\n\r\n    this.writerInput.nativeElement.value = '';\r\n    this.writerInputInDropdown.setValue(null);\r\n    this.onWriterInputChange(\"\");\r\n  }\r\n\r\n  async onWriterInputChange(value) {\r\n    let selectedWritersIndexes = this.selectedWriters.map(a => a.id);\r\n    this.writersInDropdown = await this.personnelService.getPersonnelToSelectList(numberOfItems, value, selectedWritersIndexes);\r\n  }\r\n}\r\n\r\n","<div class=\"container\">\r\n    <ng-container *ngIf=\"!isLoading; else loadingBlock\">\r\n        <ng-container *ngIf=\"!notFound; else notFoundBlock\">\r\n            <div class=\"title\">\r\n                <h1> {{ editMode ? 'Edycja' : \"Dodawanie\"}} filmu</h1>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6 float-left\">\r\n                    <mat-form-field hintLabel=\"Max 100 znaków\" appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Tytuł filmu</mat-label>\r\n                        <input matInput #input maxlength=\"100\" type=\"text\" [formControl]=\"movieTitle\"/>\r\n                        <mat-hint align=\"end\">{{movieTitle.value?.length || 0}}/100</mat-hint>\r\n                        <mat-error *ngIf=\"movieTitle.invalid || titleExistError\">{{ getTitleErrorMessage() }}</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field hintLabel=\"Max 2000 znaków\" appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Opis</mat-label>\r\n                        <textarea matInput #input maxlength=\"2000\" type=\"text\" [formControl]=\"movieDescription\"></textarea>\r\n                        <mat-hint align=\"end\">{{movieDescription.value?.length || 0}}/2000</mat-hint>\r\n                        <mat-error *ngIf=\"movieDescription.invalid\">{{ getDescriptionErrorMessage() }}</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field hintLabel=\"Przedział lat: 1900-2300\" appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Rok premiery</mat-label>\r\n                        <input matInput #input type=\"number\" [formControl]=\"movieReleaseYear\"/>\r\n                        <mat-error *ngIf=\"movieReleaseYear.invalid\">{{ getReleaseYearErrorMessage() }}</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field hintLabel=\"Przedział czasu trwania: 1-1000000 minut\" appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Czas trwania (w minutach)</mat-label>\r\n                        <input matInput #input type=\"number\" [formControl]=\"movieLengthInMinutes\"/>\r\n                        <mat-error *ngIf=\"movieLengthInMinutes.invalid\">{{ getTimeInMinutesErrorMessage() }}</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Gatunki</mat-label>\r\n                        <mat-select [formControl]=\"selectedGenres\" multiple>\r\n                          <mat-option *ngFor=\"let genre of genreList\" [value]=\"genre.id\">{{ genre.name }}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Aktorzy</mat-label>\r\n                        <mat-chip-list #chipList aria-label=\"Wybieranie aktorów\">\r\n                          <mat-chip\r\n                            *ngFor=\"let actor of selectedActors\"\r\n                            selectable=\"true\"\r\n                            removable=\"true\"\r\n                            (removed)=\"removeActor(actor)\">\r\n                            {{ actor.name + ' ' + actor.surname }}\r\n                            <mat-icon matChipRemove>cancel</mat-icon>\r\n                          </mat-chip>\r\n                          <input\r\n                            placeholder=\"Nowy aktor\"\r\n                            #actorInput\r\n                            [formControl]=\"actorInputInDropdown\"\r\n                            [matAutocomplete]=\"auto\"\r\n                            [matChipInputFor]=\"chipList\"\r\n                            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                            (matChipInputTokenEnd)=\"addActor($event)\"\r\n                            (input)=\"onActorInputChange($event.target.value)\"\r\n                            >\r\n                        </mat-chip-list>\r\n                        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectedActor($event)\">\r\n                          <mat-option *ngFor=\"let actor of actorsInDropdown\" [value]=\"actor\">\r\n                            {{ actor.name + ' ' + actor.surname }}\r\n                          </mat-option>\r\n                        </mat-autocomplete>\r\n                      </mat-form-field>\r\n\r\n\r\n                      <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Reżyserzy</mat-label>\r\n                        <mat-chip-list #chipListDirector aria-label=\"Wybieranie reżyserów\">\r\n                          <mat-chip\r\n                            *ngFor=\"let director of selectedDirectors\"\r\n                            selectable=\"true\"\r\n                            removable=\"true\"\r\n                            (removed)=\"removeDirector(director)\">\r\n                            {{ director.name + ' ' + director.surname }}\r\n                            <mat-icon matChipRemove>cancel</mat-icon>\r\n                          </mat-chip>\r\n                          <input\r\n                            placeholder=\"Nowy reżyser\"\r\n                            #directorInput\r\n                            [formControl]=\"directorInputInDropdown\"\r\n                            [matAutocomplete]=\"autoDirector\"\r\n                            [matChipInputFor]=\"chipListDirector\"\r\n                            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                            (matChipInputTokenEnd)=\"addDirector($event)\"\r\n                            (input)=\"onDirectorInputChange($event.target.value)\"\r\n                            >\r\n                        </mat-chip-list>\r\n                        <mat-autocomplete #autoDirector=\"matAutocomplete\" (optionSelected)=\"selectedDirector($event)\">\r\n                          <mat-option *ngFor=\"let director of directorsInDropdown\" [value]=\"director\">\r\n                            {{ director.name + ' ' + director.surname }}\r\n                          </mat-option>\r\n                        </mat-autocomplete>\r\n                      </mat-form-field>\r\n\r\n\r\n                      <mat-form-field appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Scenarzyści</mat-label>\r\n                        <mat-chip-list #chipListWriter aria-label=\"Wybieranie scenarzystów\">\r\n                          <mat-chip\r\n                            *ngFor=\"let writer of selectedWriters\"\r\n                            selectable=\"true\"\r\n                            removable=\"true\"\r\n                            (removed)=\"removeWriter(writer)\">\r\n                            {{ writer.name + ' ' + writer.surname }}\r\n                            <mat-icon matChipRemove>cancel</mat-icon>\r\n                          </mat-chip>\r\n                          <input\r\n                            placeholder=\"Nowy scenarzysta\"\r\n                            #writerInput\r\n                            [formControl]=\"writerInputInDropdown\"\r\n                            [matAutocomplete]=\"autoWriter\"\r\n                            [matChipInputFor]=\"chipListWriter\"\r\n                            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                            (matChipInputTokenEnd)=\"addWriter($event)\"\r\n                            (input)=\"onWriterInputChange($event.target.value)\"\r\n                            >\r\n                        </mat-chip-list>\r\n                        <mat-autocomplete #autoWriter=\"matAutocomplete\" (optionSelected)=\"selectedWriter($event)\">\r\n                          <mat-option *ngFor=\"let writer of writersInDropdown\" [value]=\"writer\">\r\n                            {{ writer.name + ' ' + writer.surname }}\r\n                          </mat-option>\r\n                        </mat-autocomplete>\r\n                      </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"clearfix col-md-6 image-preview\">\r\n                  <mat-card class=\"movie-card-margins\">\r\n                    <img mat-card-image [src]=\"file == null ? '/assets/images/placeholder.png' : file\">\r\n                    <mat-card-footer>\r\n                      <input type=\"file\" (change)=\"uploadMoviePoster($event)\"/>\r\n                    </mat-card-footer>\r\n                  </mat-card>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 clearfix\">\r\n                <div class=\"float-right\">\r\n                    <button mat-raised-button color=\"accent\" (click)=\"onSubmit()\">Zatwierdź</button>\r\n                  </div>\r\n                  <div class=\"float-right mr-3\">\r\n                    <button mat-raised-button (click)=\"onReturn()\">Powrót</button>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>\r\n<ng-template #notFoundBlock>\r\n    <div class=\"center-text\">\r\n        <h1>Nie znaleziono filmu</h1>\r\n    </div>\r\n</ng-template>\r\n<ng-template #loadingBlock>\r\n    <div class=\"mat-spinner\">\r\n        <mat-spinner color=\"accent\">\r\n        </mat-spinner>\r\n    </div>\r\n</ng-template>\r\n","import { NotificationService } from './../../services/notification.service';\r\nimport { UserRole } from './../../interfaces/auth/role';\r\nimport { User } from './../../interfaces/auth/user';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  public currentUser: User\r\n\r\n  \r\n\r\n  constructor(private router: Router,\r\n    private authService: AuthService,\r\n    private notificationService: NotificationService) { \r\n      this.authService.currentUser.subscribe(x => this.currentUser = x);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  isAdmin() {\r\n    return this.currentUser && this.currentUser.userRole === UserRole.Admin;\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigate(['/']);\r\n    this.notificationService.showSnackBarNotification(\"Pomyślnie wylogowano\", \"Zamknij\", SnackBarStyle.success);\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-light bg-light fixed-top\">\r\n    <a routerLink=\"\" class=\"navbar-brand\">FILMŁEB</a>\r\n    <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div id=\"navbarCollapse\" class=\"collapse navbar-collapse\">\r\n        <ul class=\"nav navbar-nav\" *ngIf=\"isAdmin()\">\r\n            <li class=\"nav-item\">\r\n                <a routerLink=\"admin/movie\" class=\"nav-link\">Panel administracyjny</a>\r\n            </li>\r\n        </ul>\r\n        <ul class=\"nav navbar-nav ml-auto\">\r\n            <ng-container *ngIf=\"!currentUser; else profileBlock\">\r\n                <li class=\"nav-item\">\r\n                    <a routerLink=\"signin\" class=\"nav-link\">Zaloguj się</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a routerLink=\"signup\" class=\"nav-link\">Zarejestruj się</a>\r\n                </li>\r\n            </ng-container>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n\r\n<ng-template #profileBlock>\r\n    <li class=\"nav-item dropdown\">\r\n        <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Profil</a>\r\n        <div class=\"dropdown-menu dropdown-menu-right\">\r\n            <a href=\"#\" class=\"dropdown-item\">Zmiana hasła</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a href=\"#\"class=\"dropdown-item\" (click)=\"logout()\">Wyloguj</a>\r\n        </div>\r\n    </li>\r\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to api url\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        const isLoggedIn = currentUser && currentUser.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                  Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n              });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","import { NotificationService } from './../../services/notification.service';\nimport { PersonnelService } from './../../services/personnel.service';\nimport { IPersonnelFilters } from './../../interfaces/personnel/IPersonnelFilters';\nimport { Component, OnInit } from '@angular/core';\nimport { IPersonnelListWithFilters } from 'src/app/interfaces/personnel/IPersonnelListWithFilters';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\n\n@Component({\n  selector: 'admin-personnel',\n  templateUrl: './admin-personnel.component.html',\n  styleUrls: ['./admin-personnel.component.css']\n})\nexport class AdminPersonnelComponent implements OnInit {\n  public personnelFilters: IPersonnelFilters = {\n    fullName: '',\n    nationality: '',\n    birthDateFrom: null,\n    birthDateTo: null,\n    page: 1,\n    pageSize: 10,\n    orderBy: 'surnameasc'\n  };\n  public personnel: IPersonnelListWithFilters = {\n    allElements: 0,\n    currentPage: 1,\n    allPages: 1,\n    pageSize: 10,\n    personnelList: []\n  }\n  public isLoading: boolean;\n  public pageIndex: number;\n  public displayedColumns: string[] = ['name', 'dateOfBirth', 'nationality', 'action'];\n\n  constructor(private personnelService: PersonnelService, private notificationService: NotificationService, public dialog: MatDialog) { \n    this.isLoading = true;\n  }\n\n  async ngOnInit() {\n    await this.getPersonnel();\n  }\n\n  async getPersonnel() {\n    this.isLoading = true;\n    this.personnel = await this.personnelService.getPersonnel(this.personnelFilters)\n    this.isLoading = false;\n  }\n\n  async applyFilters(event) {\n    await this.getPersonnel();\n  }\n\n  async changePage(event) {\n    if (event.pageSize != this.personnelFilters.pageSize) {\n      this.personnelFilters.pageSize = event.pageSize;\n    }\n    this.pageIndex = event.pageIndex;\n\n    this.personnelFilters.page = this.pageIndex + 1;\n    await this.getPersonnel();\n  }\n\n  openDeleteDialog(id) {\n    const dialogRef = this.dialog.open(DeletePersonnelDialog);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === true) {\n        this.personnelService.deletePersonnel(id).subscribe(() => {\n          this.notificationService.showSnackBarNotification('Pomyślnie usunięto osobę', 'Zamknij', SnackBarStyle.success);\n          this.getPersonnel();\n        })\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'delete-personnel-dialog',\n  templateUrl: './delete-personnel-dialog.html',\n})\nexport class DeletePersonnelDialog {}","<div class=\"col-md-12 filters\">\n    <mat-expansion-panel hideToggle>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            Filtry\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        \n        <div class=\"row no-gutters\">\n            <mat-form-field class=\"col-md-6 input-padding-right-25\">\n                <mat-label>Imie/Nazwisko osoby</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"personnelFilters.fullName\" />\n            </mat-form-field>\n            <mat-form-field class=\"col-md-6 input-padding-right-25\">\n                <mat-label>Narodowość</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"personnelFilters.nationality\"/>\n            </mat-form-field>\n\n            <div class=\"w-100\"></div>\n\n            <mat-form-field appearance=\"fill\" class=\"col-md-6\">\n                <mat-label>Przedział dat urodzenia</mat-label>\n                <mat-date-range-input [rangePicker]=\"picker\">\n                  <input matStartDate placeholder=\"Start date\" [(ngModel)]=\"personnelFilters.birthDateFrom\">\n                  <input matEndDate placeholder=\"End date\" [(ngModel)]=\"personnelFilters.birthDateTo\">\n                </mat-date-range-input>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-date-range-picker #picker></mat-date-range-picker>\n              </mat-form-field>\n\n            <div class=\"w-100\"></div>\n\n            <mat-form-field class=\"col-md-4 input-padding-right-25\">\n                <mat-label>Posortuj po</mat-label>\n                <mat-select [(ngModel)]=\"personnelFilters.orderBy\">\n                    <mat-option value=\"surnameasc\">Nazwisko (A-Z)</mat-option>\n                    <mat-option value=\"surnamedesc\">Nazwisko (Z-A)</mat-option>\n                    <mat-option value=\"nationalityasc\">Narodowość (A-Z)</mat-option>\n                    <mat-option value=\"nationalitydesc\">Narodowość (Z-A)</mat-option>\n                    <mat-option value=\"dateofbirthasc\">Data urodzenia (Rosnąco)</mat-option>\n                    <mat-option value=\"dateofbirthdesc\">Data urodzenia (Malejąco)</mat-option>\n                    <mat-option value=\"nameasc\">Imię (A-Z)</mat-option>\n                    <mat-option value=\"namedesc\">Imię (Z-A)</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <mat-action-row>\n            <button mat-raised-button color=\"accent\" (click)=\"applyFilters($event)\">Zatwierdź</button>\n        </mat-action-row>\n      </mat-expansion-panel>\n</div>\n\n\n<div class=\"col-md-12 pb-3\">\n  <ng-container *ngIf=\"!isLoading\">\n    <table mat-table [dataSource]=\"personnel.personnelList\" class=\"mat-elevation-z8\" multiTemplateDataRows>\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef>Imie</th>\n                <td mat-cell *matCellDef=\"let person\">{{person.name + ' ' + person.surname}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"dateOfBirth\">\n                <th mat-header-cell *matHeaderCellDef>Data urodzenia</th>\n                <td mat-cell *matCellDef=\"let person\">{{person.dateOfBirth | date:'dd MMMM yyyy':'GMT':'pl'}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"nationality\">\n                <th mat-header-cell *matHeaderCellDef>Narodowość</th>\n                <td mat-cell *matCellDef=\"let person\">{{person.nationality}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"action\">\n                <th mat-header-cell *matHeaderCellDef >\n                  <div class=\"clearfix\">\n                    <button mat-mini-fab class=\"green-background float-right\" routerLink=\"/admin/personnel/add\">\n                      <mat-icon>add</mat-icon>\n                    </button>\n                  </div>\n                </th>\n                <td mat-cell *matCellDef=\"let person\" class=\"clearfix\">\n                  <div class=\"float-right\">\n                    <button mat-mini-fab color=\"warn\" class=\"custom-button-icon\" (click)=\"openDeleteDialog(person.id)\">\n                      <mat-icon class=\"custom-icon\">delete</mat-icon>\n                    </button>\n                  </div>\n                  <div class=\"float-right mr-2\">\n                    <button mat-mini-fab class=\"custom-button-icon\" color=\"primary\" routerLink=\"/admin/personnel/edit/{{person.id}}\">\n                      <mat-icon class=\"custom-icon\">edit</mat-icon>\n                    </button>\n                  </div>\n                </td>\n              </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n  </ng-container>\n</div>\n<div>\n    <mat-paginator [length]=\"personnel.allElements\" [pageSize]=\"personnel.pageSize\" [pageIndex]=\"pageIndex\" [pageSizeOptions]=\"[5,10,20,50]\" showFirstLastButtons (page)=\"changePage($event)\"></mat-paginator>\n</div>","<h2 mat-dialog-title>Usuwanie</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p>Czy na pewno chcesz usunąć tę osobę?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Nie</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Tak</button>\r\n</mat-dialog-actions>","import { IRegisterDTO } from './../interfaces/auth/IRegisterDTO';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { UserRole } from '../interfaces/auth/role';\nimport { User } from '../interfaces/auth/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private url = `${environment.apiUrl}/api/Account`;\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient) {\n      this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUserToken')));\n      this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n      return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string) {\n      let headers = new HttpHeaders();\n      headers.append('Content-Type', 'application/json');\n\n      const body = { email: email, password: password}\n      return this.http.post<any>(`${this.url}/login`, body, { headers: headers })\n          .pipe(map(response => {\n              if (response && response.token) {\n                  let user = this.getUserFromToken(response.token, response.hasConfirmedEmail);\n                  localStorage.setItem('currentUserToken', JSON.stringify(user));\n                  this.currentUserSubject.next(user);\n              }\n\n              return response;\n          }));\n  }\n\n  register(registerDTO: IRegisterDTO) {\n    let headers = new HttpHeaders();\n      headers.append('Content-Type', 'application/json');\n\n      return this.http.post<any>(`${this.url}/register`, registerDTO, { headers: headers });\n  }\n\n  logout() {\n      // remove user from local storage to log user out\n      localStorage.removeItem('currentUserToken');\n      this.currentUserSubject.next(null);\n  }\n\n  private getUserFromToken(token, hasConfirmedEmail) : User {\n    const helper = new JwtHelperService();\n    let user = helper.decodeToken<User>(token);\n    user.token = token;\n    user.hasConfirmedEmail = hasConfirmedEmail;\n    user.userRole = UserRole[user.role];\n    return user;\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].indexOf(err.status) !== -1) {\r\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { NotificationService } from './../../services/notification.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IGenre } from 'src/app/interfaces/genres/IGenre';\r\nimport { GenresService } from 'src/app/services/genres.service';\r\nimport { Location } from '@angular/common';\r\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-genre',\r\n  templateUrl: './add-edit-genre.component.html',\r\n  styleUrls: ['./add-edit-genre.component.css']\r\n})\r\nexport class AddEditGenreComponent implements OnInit {\r\n\r\n  public notFound: boolean;\r\n  public isLoading: boolean;\r\n  public editMode: boolean;\r\n  public genreExistError: boolean;\r\n  \r\n  public genre: IGenre;\r\n  genreId: number;\r\n  genreName = new FormControl('', [Validators.required, Validators.maxLength(20)]);\r\n  genreDescription = new FormControl('', [Validators.required, Validators.maxLength(100)]);\r\n\r\n  constructor(private route: ActivatedRoute,\r\n      private genreService: GenresService,\r\n      private location: Location,\r\n      private notificationService: NotificationService) {\r\n    this.notFound = false;\r\n    this.isLoading = true;\r\n    this.genreExistError = false;\r\n\r\n    this.genre = {\r\n      name: '',\r\n      description: '',\r\n      id: 0\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.url.subscribe(urlSegments => {\r\n      this.editMode = urlSegments[2].path === 'edit';\r\n\r\n      if(this.editMode === true) {\r\n        this.getGenre(this.route.snapshot.params.id);\r\n      } else {\r\n        this.genreId = 0;\r\n        this.genreName.setValue('');\r\n        this.genreDescription.setValue('');\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  async getGenre(id) {\r\n    try {\r\n      let genre = await this.genreService.getGenre(id);\r\n      this.genreId = genre.id\r\n      this.genreName.setValue(genre.name);\r\n      this.genreDescription.setValue(genre.description);\r\n\r\n      this.isLoading = false;\r\n\r\n    } catch(exception) {\r\n      this.isLoading = false;\r\n      this.notFound = true;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.genreName.invalid) {\r\n      this.notificationService.showSnackBarNotification('Nie wszystkie pola są poprawne', 'Zamknij', SnackBarStyle.error);\r\n    }\r\n\r\n    this.genre.id = this.genreId;\r\n    this.genre.name = this.genreName.value;\r\n    this.genre.description = this.genreDescription.value;\r\n\r\n    if(this.editMode) {\r\n      this.genreService.editGenre(this.genre).subscribe(res => {\r\n        if(res == true) {\r\n          this.notificationService.showSnackBarNotification('Pomyślnie wprowadzono zmiany', 'Zamknij', SnackBarStyle.success);\r\n          this.location.back();\r\n        } else {\r\n          this.genreExistError = true;\r\n        }\r\n      });\r\n    } else {\r\n      this.genreService.addGenre(this.genre).subscribe(res => {\r\n        if(res == true) {\r\n          this.notificationService.showSnackBarNotification('Pomyślnie dodano gatunek filmowy', 'Zamknij', SnackBarStyle.success);\r\n          this.location.back();\r\n        } else {\r\n          this.genreExistError = true;\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  onReturn() {\r\n    this.location.back();\r\n  }\r\n\r\n  getNameErrorMessage() {\r\n    if (this.genreName.hasError('required')) {\r\n      return 'Nazwa gatunku nie może być pusta';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getDescriptionErrorMessage() {\r\n    if (this.genreDescription.hasError('required')) {\r\n      return 'Opis gatunku nie może być pusty';\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <ng-container *ngIf=\"!isLoading; else loadingBlock\">\r\n        <ng-container *ngIf=\"!notFound; else notFoundBlock\">\r\n            <div class=\"title\">\r\n                <h1>{{ editMode ? 'Edycja' : 'Dodawanie'}} gatunku filmowego</h1>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field hintLabel=\"Max 20 znaków\" appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Nazwa gatunku</mat-label>\r\n                        <input matInput #input maxlength=\"20\" type=\"text\" [formControl]=\"genreName\"/>\r\n                        <mat-hint align=\"end\">{{genreName.value?.length || 0}}/20</mat-hint>\r\n                        <mat-error *ngIf=\"genreName.invalid || genreExistError\">{{ getNameErrorMessage() }}</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field hintLabel=\"Max 100 znaków\" appearance=\"fill\" class='mat-form-field-custom'>\r\n                        <mat-label>Opis gatunku</mat-label>\r\n                        <input matInput #input maxlength=\"100\" type=\"text\" [formControl]=\"genreDescription\"/>\r\n                        <mat-hint align=\"end\">{{genreDescription.value?.length || 0}}/100</mat-hint>\r\n                        <mat-error *ngIf=\"genreDescription.invalid\">{{ getDescriptionErrorMessage() }}</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6 clearfix\">\r\n                    <div class=\"float-right\">\r\n                        <button mat-raised-button color=\"accent\" (click)=\"onSubmit()\">Zatwierdź</button>\r\n                      </div>\r\n                      <div class=\"float-right mr-3\">\r\n                        <button mat-raised-button (click)=\"onReturn()\">Powrót</button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>\r\n\r\n<ng-template #notFoundBlock>\r\n    <div class=\"center-text\">\r\n        <h1>Nie znaleziono gatunku</h1>\r\n    </div>\r\n</ng-template>\r\n<ng-template #loadingBlock>\r\n    <div class=\"mat-spinner\">\r\n        <mat-spinner color=\"accent\">\r\n        </mat-spinner>\r\n    </div>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authService.currentUserValue;\r\n        if (currentUser) {\r\n            // check if route is restricted by role\r\n            if (route.data.roles && route.data.roles.indexOf(currentUser.userRole) === -1) {\r\n                // role not authorised so redirect to home page\r\n                this.router.navigate(['/']);\r\n                return false;\r\n            }\r\n\r\n            if(!currentUser.hasConfirmedEmail) {\r\n                this.router.navigate(['/confimemail']);\r\n                return false;\r\n            }\r\n\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/signin'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { M } from '@angular/cdk/keycodes';\r\nimport { Component, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FilmCrew } from 'src/app/interfaces/FilmCrew';\r\nimport { IFile } from 'src/app/interfaces/movies/IFile';\r\nimport { IGetMovieDTO } from 'src/app/interfaces/movies/IGetMovieDTO';\r\nimport { IPersonnelInMovieDTO } from 'src/app/interfaces/personnel/IPersonnelInMovieDTO';\r\nimport { IReviewFilters } from 'src/app/interfaces/reviews/IReviewFilters';\r\nimport { IUserReviewListWithFilters } from 'src/app/interfaces/reviews/IUserReviewListWithFilters';\r\nimport { SnackBarStyle } from 'src/app/interfaces/SnackBarStyle';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { MoviesService } from 'src/app/services/movies.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { ReviewService } from 'src/app/services/review.service';\r\n\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html',\r\n  styleUrls: ['./movie.component.css']\r\n})\r\nexport class MovieComponent implements OnInit {\r\n\r\n  public canUserReview: boolean;\r\n  public displayReviewForm: boolean;\r\n  public userSignedIn: boolean;\r\n  public movie: IGetMovieDTO;\r\n  public actors: IPersonnelInMovieDTO[];\r\n  public directors: IPersonnelInMovieDTO[];\r\n  public writers: IPersonnelInMovieDTO[];\r\n  public reviews: IUserReviewListWithFilters;\r\n  public reviewFilters: IReviewFilters;\r\n\r\n  public isLoading: boolean;\r\n  public notFound: boolean;\r\n  public areReviewsLoading: boolean;\r\n  public canLoadReviews: boolean;\r\n\r\n  constructor(private route: ActivatedRoute, \r\n      private movieService: MoviesService, \r\n      private authService: AuthService, \r\n      private reviewService: ReviewService,\r\n      private notificationService: NotificationService) {\r\n    this.canUserReview = false;\r\n    this.displayReviewForm = false;\r\n    this.userSignedIn = false;\r\n    this.movie = {\r\n      id: 0,\r\n      title: '',\r\n      description: '',\r\n      releaseYear: 0,\r\n      movieLengthInMinutes: 0,\r\n      averageRating: 0,\r\n      moviePoster: null,\r\n      genres: [],\r\n      personnel: [],\r\n    }\r\n\r\n    this.reviews = {\r\n      currentPage: 0,\r\n      pageSize: 5,\r\n      allPages: 0,\r\n      allElements: 0,\r\n      reviewList: []\r\n    };\r\n\r\n    this.reviewFilters = {\r\n      id: this.route.snapshot.params.id,\r\n      page: 0,\r\n      pageSize: 5,\r\n      orderBy: '',\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.notFound = false;\r\n    this.areReviewsLoading = true;\r\n    this.canLoadReviews = true;\r\n\r\n    this.actors = [];\r\n    this.directors = [];\r\n    this.writers = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMovie(this.route.snapshot.params.id);\r\n    this.getReviews(this.reviewFilters);\r\n    this.checkIfUserSignedIn();\r\n    this.checkIfUserCanReview();\r\n  }\r\n\r\n  checkIfUserSignedIn() {\r\n    if(this.authService.currentUserValue != null) {\r\n      this.userSignedIn = true;\r\n    } else {\r\n      this.userSignedIn = false;\r\n    }\r\n  }\r\n\r\n  checkIfUserCanReview() {\r\n    this.reviewService.didUserReviewMovie(this.route.snapshot.params.id).subscribe(result => {\r\n      if(result) {\r\n        this.canUserReview = false;\r\n      } else {\r\n        this.canUserReview = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  async getMovie(id) {\r\n    try {\r\n      this.isLoading = true;\r\n      this.movie = await this.movieService.getMovie(id);\r\n      this.splitMoviePersonnel(this.movie.personnel);\r\n      this.isLoading = false;\r\n    } \r\n    catch(exception) {\r\n      this.isLoading = false;\r\n      this.notFound = true;\r\n    }\r\n  }\r\n\r\n  async getReviews(reviewFilters) {\r\n    try {\r\n      this.reviewFilters.page += 1;\r\n      this.canLoadReviews = true;\r\n      this.areReviewsLoading = true;\r\n\r\n      let riwjus = await this.reviewService.getMovieReviews(reviewFilters);\r\n      this.reviews.currentPage = riwjus.currentPage;\r\n      this.reviews.allPages = riwjus.allPages;\r\n      this.reviews.allElements = riwjus.allElements;\r\n      riwjus.reviewList.forEach(riwju => {\r\n        this.reviews.reviewList.push(riwju);\r\n      });\r\n\r\n      if(this.reviews.reviewList.length == this.reviews.allElements) {\r\n        this.canLoadReviews = false;\r\n      }\r\n      \r\n      this.areReviewsLoading = false;\r\n    } catch(exception) {\r\n      this.areReviewsLoading = false;\r\n    }\r\n  }\r\n\r\n  getDirectors() {\r\n    return this.directors.map(director => `${director.name} ${director.surname}`).join(', ');\r\n  }\r\n\r\n  getWriters() {\r\n    return this.writers.map(writer => `${writer.name} ${writer.surname}`).join(', ');\r\n  }\r\n\r\n  getActors() {\r\n    return this.actors.map(actor => `${actor.name} ${actor.surname}`).join(', ');\r\n  }\r\n\r\n  getMoviePoster(poster: IFile) {\r\n    if(poster != null) {\r\n      return `data:${poster.contentType};base64,${poster.file}`;\r\n    }\r\n    else {\r\n      return '/assets/images/noMovieImage.png';\r\n    }\r\n  }\r\n  \r\n  getMovieLengthInHours(movieLength) {\r\n    let hours = Math.floor(movieLength / 60);\r\n    let minutes = movieLength % 60;\r\n\r\n    let movieLengthInHours: string = hours + \"h \" + minutes + \"min \";\r\n\r\n    return movieLengthInHours;\r\n  }\r\n\r\n  splitMoviePersonnel(personnel) {\r\n    personnel.forEach(person => {\r\n      if(person.memberPosition == FilmCrew.Actor) {\r\n        this.actors.push(person);\r\n      } else if(person.memberPosition == FilmCrew.Director) {\r\n        this.directors.push(person);\r\n      } else {\r\n        this.writers.push(person);\r\n      }\r\n    });\r\n  }\r\n\r\n  showReviewForm(event) {\r\n    this.displayReviewForm = true;\r\n  }\r\n\r\n  onReviewFormSubmit(event) {\r\n    if(event) {\r\n      this.canUserReview = false;\r\n      this.notificationService.showSnackBarNotification('Pomyślnie opublikowano recenzję', 'Zamknij', SnackBarStyle.success);\r\n    } else {\r\n      this.displayReviewForm = false;\r\n    }\r\n  }\r\n\r\n  onLoadReviews() {\r\n    this.getReviews(this.reviewFilters);\r\n  }\r\n}\r\n","<div class=\"container container-margins\" *ngIf=\"!isLoading; else loadingBlock\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n            <img [src]=\"getMoviePoster(movie.moviePoster)\" class=\"movie-poster\">\r\n        </div>\r\n        <div class=\"col-md-7\">\r\n            <h1 class=\"\">\r\n                {{movie.title}} ({{movie.releaseYear}})\r\n            </h1>\r\n            <div class=\"text-muted\">\r\n                {{getMovieLengthInHours(movie.movieLengthInMinutes)}}\r\n            </div>\r\n\r\n            <div class=\"mt-5\">\r\n                {{movie.description}}\r\n            </div>\r\n\r\n            <div class=\"mt-5\">\r\n                <span class=\"font-weight-bold\">Reżyseria:</span> {{ getDirectors() }}\r\n            </div>\r\n            <div class=\"mt-1\">\r\n                <span class=\"font-weight-bold\">Scenariusz:</span> {{ getWriters() }}\r\n            </div>\r\n            <div class=\"mt-5\">\r\n                <mat-chip-list class=\"mat-chip-list\">\r\n                    <mat-chip *ngFor=\"let genre of movie.genres\" class=\"mat-chip\" color=\"primary\" selected>\r\n                        {{genre.name}}\r\n                    </mat-chip>\r\n                </mat-chip-list>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-5\">\r\n        <div class=\"col-md-12\">\r\n            <h2>Obsada</h2>\r\n        </div>\r\n    </div>\r\n\r\n    <hr />\r\n\r\n    <div class=\"row mt-3\"> \r\n        <ng-container *ngFor=\"let actor of actors\">\r\n            <div class=\"w-100 actor-element\">\r\n                {{actor.name}} {{actor.surname}}\r\n            </div>\r\n        </ng-container> \r\n    </div>\r\n\r\n    <div class=\"row mt-5\" *ngIf=\"userSignedIn && canUserReview\">\r\n        <button mat-raised-button color=\"accent\" *ngIf=\"!displayReviewForm\" (click)=\"showReviewForm($event)\">Napisz recenzję</button> \r\n        <div class=\"col-md-12\" *ngIf=\"displayReviewForm\">\r\n            <movie-review [movieId]=\"movie.id\" (reviewFormClose)=\"onReviewFormSubmit($event)\"></movie-review>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-5\">\r\n        <div class=\"col-md-12\">\r\n            <h2>Recenzje użytkowników</h2>\r\n        </div>  \r\n    </div>\r\n\r\n    <hr/>\r\n\r\n    <div class=\"row\" *ngIf=\"!areReviewsLoading; else loadingBlock\">\r\n        <div class=\"col-md-12\">\r\n            <ng-container *ngFor=\"let review of reviews.reviewList\">\r\n                <div class=\"w-100 user-review\">\r\n                    <mat-card>\r\n                        <mat-card-title class=\"user-review-title\">\r\n                            <div>\r\n                                {{review.username}}\r\n                            </div>\r\n                            <div>\r\n                                <mat-icon>star</mat-icon>\r\n                                <span>{{review.rating}}</span>\r\n                            </div>\r\n                        </mat-card-title>\r\n                        <mat-card-subtitle>\r\n                            01.01.2021\r\n                        </mat-card-subtitle>\r\n                        <mat-card-content>\r\n                            {{review.message}}\r\n                        </mat-card-content>\r\n                    </mat-card>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n            <ng-container *ngIf=\"canLoadReviews\">\r\n                <button mat-raised-button color=\"primary\" (click)=\"onLoadReviews()\">Więcej recenzji</button>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n\r\n    <div style=\"height: 200px;\">\r\n        \r\n    </div>\r\n</div>\r\n\r\n<ng-template #loadingBlock>\r\n    <div class=\"mat-spinner container-margins\">\r\n        <mat-spinner color=\"accent\">\r\n        </mat-spinner>\r\n    </div>\r\n</ng-template>\r\n","import { IUserInSelectDTO } from './../interfaces/user/IUserInSelectDTO';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { IUserRole } from '../interfaces/user/IUserRole';\r\nimport { IUserNameRole } from '../interfaces/user/IUserNameRole';\r\nimport { IUserRoleFilters } from '../interfaces/user/IUserRoleFilters';\r\nimport { IUserRoleListWithFilters } from '../interfaces/user/IUserRoleListWithFilters';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    url = `${environment.apiUrl}/api/Role`;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getUserRole(role: IUserRoleFilters): Observable<IUserRoleListWithFilters> {\r\n        let headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/json');\r\n\r\n        let params = new HttpParams();\r\n        params = params.append('username', role.username);\r\n        params = params.append('page', role.page.toString());\r\n        params = params.append('pageSize', role.pageSize.toString() ? role.pageSize.toString() : '');\r\n        params = params.append('orderBy', role.orderBy);\r\n\r\n        return this.http.get<IUserRoleListWithFilters>(this.url, { headers: headers, params: params });\r\n    }\r\n\r\n    deleteUser(id: number) {\r\n        return this.http.delete(`${this.url}/${id}`);\r\n    }\r\n\r\n    getUserName(id: number): Observable<IUserNameRole> {\r\n        return this.http.get<IUserNameRole>(`${this.url}/${id}`);\r\n    }\r\n\r\n    changeUserRole(userNameRole : IUserRole): Observable<any>{\r\n        let headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/json');\r\n    \r\n        let formData: FormData = new FormData();\r\n        formData.append('id', userNameRole.id.toString());\r\n        formData.append('username', userNameRole.username);\r\n        formData.append('role', userNameRole.role);\r\n    \r\n        return this.http.post(this.url, formData, { headers: headers });\r\n    }\r\n\r\n    async getUsersToSelect(startsWith: string) {\r\n        let headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/json');\r\n\r\n        let params = new HttpParams();\r\n        params = params.append('startsWith', startsWith ? startsWith : '');\r\n\r\n        return this.http.get<IUserInSelectDTO[]>(`${this.url}/select`, { headers: headers, params: params }).toPromise();\r\n    }\r\n}\r\n\r\n","import { IMovieInSelectDTO } from './../interfaces/movies/IMovieInSelectDTO';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { IMovieListWithFilters } from '../interfaces/movies/IMovieListWithFilters';\r\nimport { Observable } from 'rxjs';\r\nimport { IMovieFilters } from '../interfaces/movies/IMovieFilters';\r\nimport { IGetMovieDTO } from '../interfaces/movies/IGetMovieDTO';\r\nimport { IMovieDTO } from '../interfaces/movies/IMovieDTO';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class MoviesService {\r\n  private url = `${environment.apiUrl}/api/Movie`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMovies(movieFilters: IMovieFilters): Observable<IMovieListWithFilters> {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    \r\n    let params = new HttpParams();\r\n    params = params.append('title', movieFilters.title);\r\n    params = params.append('releaseYearFrom', movieFilters.releaseYearFrom ? movieFilters.releaseYearFrom.toString() : '');\r\n    params = params.append('releaseYearTo', movieFilters.releaseYearTo ? movieFilters.releaseYearTo.toString() : '');\r\n    params = params.append('movieLengthFrom', movieFilters.movieLengthFrom ? movieFilters.movieLengthFrom.toString() : '');\r\n    params = params.append('movieLengthTo', movieFilters.movieLengthTo ? movieFilters.movieLengthTo.toString() : '');\r\n    params = params.append('avgRatingFrom', movieFilters.avgRatingFrom ? movieFilters.avgRatingFrom.toString() : '');\r\n    params = params.append('avgRatingTo', movieFilters.avgRatingTo ? movieFilters.avgRatingTo.toString() : '');\r\n    params = params.append('page', movieFilters.page.toString());\r\n    params = params.append('pageSize', movieFilters.pageSize ? movieFilters.pageSize.toString() : '');\r\n    params = params.append('orderBy', movieFilters.orderBy);\r\n    params = params.append('genreId', movieFilters.genreId ? movieFilters.genreId.toString() : '');\r\n\r\n    return this.http.get<IMovieListWithFilters>(this.url, { headers: headers, params: params });\r\n  }\r\n\r\n  deleteMovie(id: number): Observable<any> {\r\n    return this.http.delete(`${this.url}/${id}`);\r\n  }\r\n\r\n  editMovie(movie: IMovieDTO): Observable<any> {\r\n    let headers = new HttpHeaders().append('Content-Disposition', 'multipart/form-data');\r\n\r\n    let formData: FormData = new FormData();\r\n    formData.append('id', movie.id ? movie.id.toString() : '');\r\n    formData.append('title', movie.title);\r\n    formData.append('description', movie.description);\r\n    formData.append('releaseYear', movie.releaseYear ? movie.releaseYear.toString() : '');\r\n    formData.append('movieLengthInMinutes', movie.movieLengthInMinutes ? movie.movieLengthInMinutes.toString() : '');\r\n    formData.append('file', movie.file);\r\n    formData.append('updatePhoto', JSON.stringify(movie.updatePhoto));\r\n\r\n    movie.crew.forEach( (person, index) => {\r\n      formData.append('crew[' + index + \"].personnelId\", person.personnelId ? person.personnelId.toString() : '');\r\n      formData.append('crew[' + index + \"].filmCrew\", person.filmCrew.toString());\r\n    })\r\n    \r\n    movie.genres.forEach( (genre, index) => {\r\n      formData.append('genres[' + index + \"]\", genre ? genre.toString() : '');\r\n    })\r\n\r\n    return this.http.put(this.url, formData, {headers: headers});\r\n  }\r\n\r\n  addMovie(movie: IMovieDTO): Observable<any> {\r\n    let headers = new HttpHeaders().append('Content-Disposition', 'multipart/form-data');\r\n\r\n    let formData: FormData = new FormData();\r\n    formData.append('id', movie.id.toString());\r\n    formData.append('title', movie.title);\r\n    formData.append('description', movie.description);\r\n    formData.append('releaseYear', movie.releaseYear ? movie.releaseYear.toString() : '');\r\n    formData.append('movieLengthInMinutes', movie.movieLengthInMinutes ? movie.movieLengthInMinutes.toString() : '');\r\n    formData.append('file', movie.file);\r\n    formData.append('updatePhoto', JSON.stringify(movie.updatePhoto));\r\n\r\n    movie.crew.forEach( (person, index) => {\r\n      formData.append('crew[' + index + \"].personnelId\", person.personnelId ? person.personnelId.toString() : '');\r\n      formData.append('crew[' + index + \"].filmCrew\", person.filmCrew.toString());\r\n    })\r\n    \r\n    movie.genres.forEach( (genre, index) => {\r\n      formData.append('genres[' + index + \"]\", genre ? genre.toString() : '');\r\n    })\r\n\r\n    return this.http.post(this.url, formData, {headers: headers});\r\n  }\r\n\r\n  async getMovie(id: number) {\r\n    return await this.http.get<IGetMovieDTO>(`${this.url}/${id}`).toPromise();\r\n  }\r\n\r\n  async getMoviesToSelect(startsWith: string) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('startsWith', startsWith ? startsWith : '');\r\n\r\n    return this.http.get<IMovieInSelectDTO[]>(`${this.url}/select`, { headers: headers, params: params }).toPromise();\r\n  }\r\n}","export enum UserRole\r\n{\r\n    \"Admin\" = 0,\r\n    \"User\" = 1\r\n}","<div class=\"col-md-12 filters\">\r\n  <mat-expansion-panel hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Filtry\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      \r\n      <div class=\"row no-gutters\">\r\n          <mat-form-field class=\"col-md-4 input-padding-right-25\">\r\n              <mat-label>Nazwa użytkownika</mat-label>\r\n              <input matInput type=\"text\" [(ngModel)]=\"roleFilter.username\" />\r\n          </mat-form-field>\r\n\r\n          <div class=\"w-100\"></div>\r\n\r\n          <mat-form-field class=\"col-md-4 input-padding-right-25\">\r\n              <mat-label>Posortuj po</mat-label>\r\n              <mat-select [(ngModel)]=\"roleFilter.orderBy\">\r\n                  <mat-option value=\"userNameAsc\">Nazwie użytkownika(A-Z)</mat-option>\r\n                  <mat-option value=\"userNameDesc\">Nazwie użytkownika(Z-A)</mat-option>\r\n                  <mat-option value=\"roleAsc\">Roli (A-U)</mat-option>\r\n                  <mat-option value=\"roleDesc\">Roli (U-A)</mat-option>\r\n              </mat-select>\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <mat-action-row>\r\n          <button mat-raised-button color=\"accent\" (click)=\"onApplyFilters($event)\">Zatwierdź</button>\r\n      </mat-action-row>\r\n    </mat-expansion-panel>\r\n</div>\r\n<div class=\"col-md-12 pb-3\">\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <table mat-table [dataSource]=\"userRoleList.roleList\" class=\"mat-elevation-z8\" multiTemplateDataRows>\r\n              <ng-container matColumnDef=\"username\">\r\n                <th mat-header-cell *matHeaderCellDef>Nazwa użytkownika</th>\r\n                <td mat-cell *matCellDef=\"let userRole\">{{userRole.username}}</td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"role\">\r\n                <th mat-header-cell *matHeaderCellDef>Rola</th>\r\n                <td mat-cell *matCellDef=\"let userRole\">                \r\n                  <mat-form-field>\r\n                      <mat-select [(value)]=\"userRole.role\">\r\n                        <mat-option value=\"Admin\">Admin</mat-option>\r\n                        <mat-option value=\"User\">User</mat-option>\r\n                      </mat-select>\r\n                  </mat-form-field>\r\n                </td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef >\r\n                    <div class=\"clearfix\">\r\n                    </div>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let userRole\" class=\"clearfix\">\r\n                    <div class=\"float-right\">\r\n                        <button mat-mini-fab color=\"warn\" (click)=\"openDeleteDialog(userRole.id)\">\r\n                          <mat-icon>delete</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"float-right mr-2\">\r\n                        <button mat-mini-fab (click)=\"changeUserRole(userRole.id)\" color=\"primary\">\r\n                          <mat-icon>done</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </ng-container>  \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </ng-container>\r\n</div>\r\n\r\n<div>\r\n  <mat-paginator [length]=\"userRoleList.allElements\" [pageSize]=\"roleFilter.pageSize\" [pageIndex]=\"pageIndex\" [pageSizeOptions]=\"[5,10,15,20]\" showFirstLastButtons (page)=\"changePage($event)\"></mat-paginator>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IUserRoleListWithFilters } from 'src/app/interfaces/user/IUserRoleListWithFilters';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { IUserRoleFilters } from 'src/app/interfaces/user/IUserRoleFilters';\r\nimport { IUserRole } from 'src/app/interfaces/user/IUserRole';\r\n\r\n@Component({\r\n    selector: 'admin-user',\r\n    templateUrl: './admin-user.component.html',\r\n    styleUrls: ['./admin-user.component.css']\r\n  })\r\n\r\n  export class AdminUserComponent implements OnInit {\r\n    \r\n    public isLoading: boolean;\r\n    public pageIndex: number;\r\n    public displayedColumns: string[] = ['username', 'role','action'];\r\n\r\n    public userRoleList: IUserRoleListWithFilters = {\r\n      allElements: 0,\r\n      currentPage: 1,\r\n      allPages: 0,\r\n      pageSize: 0,\r\n      roleList: []\r\n    }\r\n\r\n    public roleFilter: IUserRoleFilters = {\r\n      username: '',\r\n      page: 1,\r\n      pageSize: 10,\r\n      orderBy: '',\r\n    }\r\n\r\n    public newUserRole: IUserRole = {\r\n      id: null,\r\n      username: null,\r\n      role: null\r\n    }\r\n\r\n    constructor(private userService: UserService, public dialog: MatDialog) {\r\n      this.isLoading = true;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.pageIndex = 0;\r\n      this.roleFilter.pageSize = 10;\r\n      this.getUserRoleList();\r\n    }\r\n\r\n    onApplyFilters(event) {\r\n      let pageSize = this.roleFilter.pageSize;\r\n      this.roleFilter.pageSize = pageSize;\r\n      this.roleFilter.page = 1;\r\n      this.pageIndex = 0;\r\n      this.getUserRoleList();\r\n    }\r\n\r\n    changePage(event) {\r\n      if (event.pageSize != this.roleFilter.pageSize) {\r\n        this.roleFilter.pageSize = event.pageSize;\r\n      }\r\n      this.pageIndex = event.pageIndex;\r\n  \r\n      this.roleFilter.page = this.pageIndex + 1;\r\n      this.getUserRoleList();\r\n    }\r\n  \r\n    async getUserRoleList() {\r\n      this.userService.getUserRole(this.roleFilter).subscribe(data => {\r\n        this.isLoading = true;\r\n        this.userRoleList = data;\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n\r\n    getUserByFind(id){\r\n      return this.userRoleList.roleList.find(x => x.id === id);\r\n    }\r\n\r\n    changeUserRole(id){\r\n      this.newUserRole = this.getUserByFind(id);\r\n      this.userService.changeUserRole(this.newUserRole).subscribe(res => {\r\n        alert('Pomyślnie wprowadzono zmiany');\r\n        this.getUserRoleList();\r\n    });\r\n    }\r\n\r\n    openDeleteDialog(id) {\r\n      const dialogRef = this.dialog.open(DeleteUserDialog);\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if(result == true) {\r\n          this.userService.deleteUser(id).subscribe(() => {\r\n            this.getUserRoleList();\r\n            alert(\"Pomyślnie usunięto użytkownika\");\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  @Component({\r\n    selector: 'delete-user-dialog',\r\n    templateUrl: './delete-user-dialog.html',\r\n  })\r\n  \r\n  export class DeleteUserDialog {}","<h2 mat-dialog-title>Usuwanie</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p>Czy na pewno chcesz usunąć tego użytkownika?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Nie</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Tak</button>\r\n</mat-dialog-actions>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}